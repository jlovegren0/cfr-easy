%!PS-Adobe-3.0
%%Creator: groff version 1.22.3
%%CreationDate: Wed Dec  5 04:04:01 2018
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 3
%%Pages: 21
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 3
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F/F1 10.95/Times-Bold@0 SF
-.219(NA)72 84 S(ME).219 E F0
(libcurl-tutorial \255 libcurl programming tutorial)108 96 Q F1(Objecti)
72 112.8 Q -.11(ve)-.11 G F0 .009(This document attempts to describe th\
e general principles and some basic approaches to consider when pro-)108
124.8 R .714(gramming with libcurl. The te)108 136.8 R .714
(xt will focus mainly on the C interf)-.15 F .715(ace b)-.1 F .715
(ut might apply f)-.2 F .715(airly well on other)-.1 F(interf)108 148.8
Q(aces as well as the)-.1 E 2.5(yu)-.15 G(sually follo)-2.5 E 2.5(wt)
-.25 G(he C one pretty closely)-2.5 E(.)-.65 E .825
(This document will refer to ')108 172.8 R .825(the user' as the person\
 writing the source code that uses libcurl. That w)-.18 F(ould)-.1 E
.588(probably be you or someone in your position.)108 184.8 R .588
(What will be generally referred to as ')5.588 F .589
(the program' will be)-.18 F .971(the collected source code that you wr\
ite that is using libcurl for transfers. The program is outside libcurl)
108 196.8 R(and libcurl is outside of the program.)108 208.8 Q 1.6 -.8
(To g)108 232.8 T(et more details on all options and functions describe\
d herein, please refer to their respecti).8 E .3 -.15(ve m)-.25 H
(an pages.).15 E F1(Building)72 261.6 Q F0 .257(There are man)108 273.6
R 2.757(yd)-.15 G(if)-2.757 E .257(ferent w)-.25 F .258(ays to b)-.1 F
.258(uild C programs. This chapter will assume a Unix style b)-.2 F .258
(uild process. If)-.2 F .746(you use a dif)108 285.6 R .746(ferent b)
-.25 F .745(uild system, you can still read this to get general informa\
tion that may apply to your)-.2 F(en)108 297.6 Q(vironment as well.)-.4
E(Compiling the Program)108 314.4 Q -1.1(Yo)144 326.4 S .718
(ur compiler needs to kno)1.1 F 3.218(ww)-.25 G .719
(here the libcurl headers are located. Therefore you must set your)
-3.218 F(compiler')144 338.4 Q 3.778(si)-.55 G 1.278(nclude path to poi\
nt to the directory where you installed them. The 'curl-con\214g'[3])
-3.778 F(tool can be used to get this information:)144 350.4 Q 2.5($c)
144 374.4 S(url-con\214g --c\215ags)-2.5 E
(Linking the Program with libcurl)108 403.2 Q 1.608(When ha)144 415.2 R
1.608(ving compiled the program, you need to link your object \214les t\
o create a single e)-.2 F -.15(xe)-.15 G(-).15 E .021(cutable. F)144
427.2 R .021(or that to succeed, you need to link with libcurl and poss\
ibly also with other libraries that)-.15 F .283
(libcurl itself depends on. Lik)144 439.2 R 2.783(et)-.1 G .283
(he OpenSSL libraries, b)-2.783 F .283(ut e)-.2 F -.15(ve)-.25 G 2.783
(ns).15 G .284(ome standard OS libraries may be)-2.783 F 1.022
(needed on the command line. T)144 451.2 R 3.522<6f8c>-.8 G 1.022
(gure out which \215ags to use, once ag)-3.522 F 1.021
(ain the 'curl-con\214g' tool)-.05 F(comes to the rescue:)144 463.2 Q
2.5($c)144 487.2 S(url-con\214g --libs)-2.5 E(SSL or Not)108 516 Q 1.358
(libcurl can be b)144 528 R 1.358(uilt and customized in man)-.2 F 3.858
(yw)-.15 G 1.358(ays. One of the things that v)-3.958 F 1.359
(aries from dif)-.25 F(ferent)-.25 E .7(libraries and b)144 540 R .7
(uilds is the support for SSL-based transfers, lik)-.2 F 3.2(eH)-.1 G .7
(TTPS and FTPS. If a supported)-3.2 F .691(SSL library w)144 552 R .691
(as detected properly at b)-.1 F .691(uild-time, libcurl will be b)-.2 F
.692(uilt with SSL support. T)-.2 F 3.192<6f8c>-.8 G(gure)-3.192 E
(out if an installed libcurl has been b)144 564 Q
(uilt with SSL support enabled, use 'curl-con\214g' lik)-.2 E 2.5(et)-.1
G(his:)-2.5 E 2.5($c)144 588 S(url-con\214g --feature)-2.5 E .199
(And if SSL is supported, the k)144 612 R -.15(ey)-.1 G -.1(wo).15 G
.198(rd 'SSL).1 F 2.698('w)-.92 G .198
(ill be written to stdout, possibly together with a fe)-2.698 F(w)-.25 E
(other features that could be either on or of)144 624 Q 2.5(fo)-.25 G
2.5(nf)-2.5 G(or dif)-2.5 E(ferent libcurls.)-.25 E
(See also the "Features libcurl Pro)144 648 Q(vides" further do)-.15 E
(wn.)-.25 E(autoconf macro)108 664.8 Q .483
(When you write your con\214gure script to detect libcurl and setup v)
144 676.8 R .483(ariables accordingly)-.25 F 2.983(,w)-.65 G 2.983(eo)
-2.983 G -.25(ff)-2.983 G .483(er a).25 F(pre)144 688.8 Q .652
(written macro that probably does e)-.25 F -.15(ve)-.25 G .651
(rything you need in this area. See docs/libcurl/libcurl.m4).15 F
(\214le - it includes docs on ho)144 700.8 Q 2.5(wt)-.25 G 2.5(ou)-2.5 G
(se it.)-2.5 E(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(1)
188.865 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F/F1 10.95/Times-Bold@0 SF
-.219(Po)72 84 S(rtable Code in a P).219 E(ortable W)-.219 E(orld)-.821
E F0 .03(The people behind libcurl ha)108 96 R .33 -.15(ve p)-.2 H .03
(ut a considerable ef).15 F .031(fort to mak)-.25 F 2.531(el)-.1 G .031
(ibcurl w)-2.531 F .031(ork on a lar)-.1 F .031(ge amount of dif)-.18 F
(ferent)-.25 E(operating systems and en)108 108 Q(vironments.)-.4 E -1.1
(Yo)108 132 S 2.636(up)1.1 G .136(rogram libcurl the same w)-2.636 F
.135(ay on all platforms that libcurl runs on. There are only v)-.1 F
.135(ery fe)-.15 F 2.635(wm)-.25 G .135(inor con-)-2.635 F .513
(siderations that dif)108 144 R(fer)-.25 E 3.014(.I)-.55 G 3.014(fy)
-3.014 G .514(ou just mak)-3.014 F 3.014(es)-.1 G .514
(ure to write your code portable enough, you may v)-3.014 F .514
(ery well create)-.15 F(yourself a v)108 156 Q
(ery portable program. libcurl shouldn')-.15 E 2.5(ts)-.18 G
(top you from that.)-2.5 E F1(Global Pr)72 184.8 Q(eparation)-.197 E F0
.056
(The program must initialize some of the libcurl functionality globally)
108 196.8 R 2.556(.T)-.65 G .055(hat means it should be done e)-2.556 F
(xactly)-.15 E 1.083(once, no matter ho)108 208.8 R 3.583(wm)-.25 G(an)
-3.583 E 3.583(yt)-.15 G 1.083(imes you intend to use the library)-3.583
F 3.583(.O)-.65 G 1.084(nce for your program')-3.583 F 3.584(se)-.55 G
1.084(ntire life time.)-3.584 F(This is done using)108 220.8 Q
(curl_global_init\(\))110.5 244.8 Q 4.804(and it tak)108 268.8 R 4.804(\
es one parameter which is a bit pattern that tells libcurl what to init\
ialize. Using)-.1 F/F2 10/Times-Italic@0 SF(CURL_GLOB)108 280.8 Q
(AL_ALL)-.25 E F0 .624(will mak)3.124 F 3.124(ei)-.1 G 3.124(ti)-3.124 G
.624(nitialize all kno)-3.124 F .625
(wn internal sub modules, and might be a good def)-.25 F(ault)-.1 E
(option. The current tw)108 292.8 Q 2.5(ob)-.1 G
(its that are speci\214ed are:)-2.5 E(CURL_GLOB)144 309.6 Q(AL_WIN32)
-.35 E 1.329(which only does an)180 321.6 R 1.329(ything on W)-.15 F
(indo)-.4 E 1.328(ws machines. When used on a W)-.25 F(indo)-.4 E 1.328
(ws machine,)-.25 F(it')180 333.6 Q 1.139(ll mak)-.1 F 3.639(el)-.1 G
1.139(ibcurl initialize the win32 sock)-3.639 F 1.139(et stuf)-.1 F
1.139(f. W)-.25 F 1.139(ithout ha)-.4 F 1.14
(ving that initialized prop-)-.2 F(erly)180 345.6 Q 3.675(,y)-.65 G
1.175(our program cannot use sock)-3.675 F 1.175(ets properly)-.1 F
3.675(.Y)-.65 G 1.175(ou should only do this once for each)-4.775 F .489
(application, so if your program already does this or of another librar\
y in use does it, you)180 357.6 R
(should not tell libcurl to do this as well.)180 369.6 Q(CURL_GLOB)144
386.4 Q(AL_SSL)-.35 E .309(which only does an)180 398.4 R .308
(ything on libcurls compiled and b)-.15 F .308
(uilt SSL-enabled. On these systems,)-.2 F 1.247(this will mak)180 410.4
R 3.747(el)-.1 G 1.248(ibcurl initialize the SSL library properly for t\
his application. This only)-3.747 F .543(needs to be done once for each\
 application so if your program or another library already)180 422.4 R
(does this, this bit should not be needed.)180 434.4 Q .285
(libcurl has a def)108 458.4 R .285
(ault protection mechanism that detects if)-.1 F F2
(curl_global_init\(3\))2.785 E F0(hasn')2.785 E 2.786(tb)-.18 G .286
(een called by the time)-2.786 F F2(curl_easy_perform\(3\))108 470.4 Q
F0 .315(is called and if that is the case, libcurl runs the function it\
self with a guessed bit pat-)2.815 F(tern. Please note that depending s\
olely on this is not considered nice nor v)108 482.4 Q(ery good.)-.15 E
.895(When the program no longer uses libcurl, it should call)108 506.4 R
F2(curl_global_cleanup\(3\))3.395 E F0 3.396(,w)C .896
(hich is the opposite of)-3.396 F .276
(the init call. It will then do the re)108 518.4 R -.15(ve)-.25 G .275
(rsed operations to cleanup the resources the).15 F F2
(curl_global_init\(3\))2.775 E F0 .275(call ini-)2.775 F(tialized.)108
530.4 Q .701(Repeated calls to)108 554.4 R F2(curl_global_init\(3\))
3.201 E F0(and)3.201 E F2(curl_global_cleanup\(3\))3.202 E F0 .702
(should be a)3.202 F -.2(vo)-.2 G .702(ided. The).2 F 3.202(ys)-.15 G
.702(hould only be)-3.202 F(called once each.)108 566.4 Q F1 -.274(Fe)72
595.2 S(atur).274 E(es libcurl Pr)-.197 E -.11(ov)-.197 G(ides).11 E F0
.578(It is considered best-practice to determine libcurl features at ru\
n-time rather than at b)108 607.2 R .578(uild-time \(if possible)-.2 F
.015(of course\). By calling)108 619.2 R F2(curl_ver)2.515 E
(sion_info\(3\))-.1 E F0 .015
(and checking out the details of the returned struct, your program)2.515
F(can \214gure out e)108 631.2 Q
(xactly what the currently running libcurl supports.)-.15 E F1 -1.228
-.81(Tw o)72 660 T(Interfaces)3.548 E F0 1.108
(libcurl \214rst introduced the so called easy interf)108 672 R 1.107
(ace. All operations in the easy interf)-.1 F 1.107(ace are pre\214x)-.1
F 1.107(ed with)-.15 F('curl_easy'. The easy interf)108 684 Q(ace lets \
you do single transfers with a synchronous and blocking function call.)
-.1 E 1.214(libcurl also of)108 708 R 1.214(fers another interf)-.25 F
1.214(ace that allo)-.1 F 1.215
(ws multiple simultaneous transfers in a single thread, the so)-.25 F
1.27(called multi interf)108 720 R 1.27(ace. More about that interf)-.1
F 1.269(ace is detailed in a separate chapter further do)-.1 F 1.269
(wn. Y)-.25 F 1.269(ou still)-1.1 F(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(2)188.865 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F
(need to understand the easy interf)108 84 Q
(ace \214rst, so please continue reading for better understanding.)-.1 E
/F1 10.95/Times-Bold@0 SF(Handle the Easy libcurl)72 100.8 Q F0 1.948
-.8(To u)108 112.8 T .348(se the easy interf).8 F .348
(ace, you must \214rst create yourself an easy handle. Y)-.1 F .349
(ou need one handle for each easy)-1.1 F 1.259(session you w)108 124.8 R
1.259(ant to perform. Basically)-.1 F 3.759(,y)-.65 G 1.259
(ou should use one handle for e)-3.759 F -.15(ve)-.25 G 1.259
(ry thread you plan to use for).15 F(transferring. Y)108 136.8 Q
(ou must ne)-1.1 E -.15(ve)-.25 G 2.5(rs).15 G
(hare the same handle in multiple threads.)-2.5 E
(Get an easy handle with)108 160.8 Q(easyhandle = curl_easy_init\(\);)
110.5 184.8 Q .278
(It returns an easy handle. Using that you proceed to the ne)108 208.8 R
.279(xt step: setting up your preferred actions. A han-)-.15 F(dle is j\
ust a logic entity for the upcoming transfer or series of transfers.)108
220.8 Q -1.1(Yo)108 244.8 S 3.012(us)1.1 G .512
(et properties and options for this handle using)-3.012 F/F2 10
/Times-Italic@0 SF(curl_easy_setopt\(3\))3.011 E F0 3.011(.T)C(he)-3.011
E 3.011(yc)-.15 G .511(ontrol ho)-3.011 F 3.011(wt)-.25 G .511
(he subsequent)-3.011 F .743(transfer or transfers will be made. Option\
s remain set in the handle until set ag)108 256.8 R .744
(ain to something dif)-.05 F(ferent.)-.25 E(The)108 268.8 Q 2.5(ya)-.15
G(re stick)-2.5 E 1.3 -.65(y. M)-.15 H
(ultiple requests using the same handle will use the same options.).65 E
1.285(If you at an)108 292.8 R 3.785(yp)-.15 G 1.285(oint w)-3.785 F
1.285(ould lik)-.1 F 3.785(et)-.1 G 3.785(ob)-3.785 G 1.285
(lank all pre)-3.785 F 1.285
(viously set options for a single easy handle, you can call)-.25 F F2
(curl_easy_r)108 304.8 Q(eset\(3\))-.37 E F0 2.322(and you can also mak)
4.822 F 4.822(eac)-.1 G 2.323
(lone of an easy handle \(with all its set options\) using)-4.822 F F2
(curl_easy_duphandle\(3\))108 316.8 Q F0(.)A(Man)108 340.8 Q 2.728(yo)
-.15 G 2.728(ft)-2.728 G .227(he options you set in libcurl are "string\
s", pointers to data terminated with a zero byte. When you)-2.728 F .085
(set strings with)108 352.8 R F2(curl_easy_setopt\(3\))2.585 E F0 2.585
(,l)C .085(ibcurl mak)-2.585 F .085(es its o)-.1 F .085(wn cop)-.25 F
2.585(ys)-.1 G 2.585(ot)-2.585 G .085(hat the)-2.585 F 2.585(yd)-.15 G
(on')-2.585 E 2.585(tn)-.18 G .085(eed to be k)-2.585 F .085
(ept around in)-.1 F(your application after being set[4].)108 364.8 Q
.867
(One of the most basic properties to set in the handle is the URL. Y)108
388.8 R .867(ou set your preferred URL to transfer)-1.1 F(with)108 400.8
Q F2(CURLOPT_URL\(3\))2.5 E F0(in a manner similar to:)2.5 E
(curl_easy_setopt\(handle, CURLOPT_URL, "http://domain.com/"\);)110.5
424.8 Q(Let')108 448.8 Q 2.828(sa)-.55 G .328
(ssume for a while that you w)-2.828 F .328(ant to recei)-.1 F .628 -.15
(ve d)-.25 H .329(ata as the URL identi\214es a remote resource you w)
.15 F .329(ant to)-.1 F .633(get here. Since you write a sort of applic\
ation that needs this transfer)108 460.8 R 3.133(,Ia)-.4 G .633
(ssume that you w)-3.133 F .633(ould lik)-.1 F 3.133(et)-.1 G 3.133(og)
-3.133 G(et)-3.133 E .632(the data passed to you directly instead of si\
mply getting it passed to stdout. So, you write your o)108 472.8 R .632
(wn func-)-.25 F(tion that matches this prototype:)108 484.8 Q
(size_t write_data\(v)110.5 508.8 Q(oid *b)-.2 E(uf)-.2 E(fer)-.25 E 2.5
(,s)-.4 G(ize_t size, size_t nmemb, v)-2.5 E(oid *userp\);)-.2 E -1.1
(Yo)108 532.8 S 2.5(ut)1.1 G(ell libcurl to pass all data to this funct\
ion by issuing a function similar to this:)-2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_WRITEFUNCTION, write_data\);)
110.5 556.8 Q -1.1(Yo)108 580.8 S 2.5(uc)1.1 G
(an control what data your callback function gets in the fourth ar)-2.5
E(gument by setting another property:)-.18 E
(curl_easy_setopt\(easyhandle, CURLOPT_WRITED)110.5 604.8 Q -1.21 -1.11
(AT A)-.4 H 2.5(,&)1.11 G(internal_struct\);)-2.5 E 1.542
(Using that property)108 628.8 R 4.042(,y)-.65 G 1.541(ou can easily pa\
ss local data between your application and the function that gets)-4.042
F(in)108 640.8 Q -.2(vo)-.4 G -.1(ke).2 G 2.5(db).1 G 2.5(yl)-2.5 G
(ibcurl. libcurl itself w)-2.5 E(on')-.1 E 2.5(tt)-.18 G
(ouch the data you pass with)-2.5 E F2(CURLOPT_WRITED)2.5 E -.37(AT)-.35
G(A\(3\))-.13 E F0(.)A .931(libcurl of)108 664.8 R .931(fers its o)-.25
F .931(wn def)-.25 F .931(ault internal callback that will tak)-.1 F
3.431(ec)-.1 G .931(are of the data if you don')-3.431 F 3.431(ts)-.18 G
.931(et the callback)-3.431 F(with)108 676.8 Q F2
(CURLOPT_WRITEFUNCTION\(3\))4.074 E F0 4.074(.I)C 4.074(tw)-4.074 G
1.574(ill then simply output the recei)-4.074 F -.15(ve)-.25 G 4.074(dd)
.15 G 1.574(ata to stdout. Y)-4.074 F 1.573(ou can)-1.1 F(ha)108 688.8 Q
.763 -.15(ve t)-.2 H .463(he def).15 F .464
(ault callback write the data to a dif)-.1 F .464
(ferent \214le handle by passing a 'FILE *' to a \214le opened for)-.25
F(writing with the)108 700.8 Q F2(CURLOPT_WRITED)2.5 E -.37(AT)-.35 G
(A\(3\))-.13 E F0(option.)2.5 E(No)108 724.8 Q 2.605 -.65(w, w)-.25 H
3.805(en).65 G 1.305(eed to tak)-3.805 F 3.805(eas)-.1 G 1.305
(tep back and ha)-3.805 F 1.604 -.15(ve a d)-.2 H 1.304
(eep breath. Here').15 F 3.804(so)-.55 G 1.304
(ne of those rare platform-dependent)-3.804 F(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(3)188.865 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .049
(nitpicks. Did you spot it? On some platforms[2], libcurl w)108 84 R
(on')-.1 E 2.549(tb)-.18 G 2.55(ea)-2.549 G .05
(ble to operate on \214les opened by the pro-)-2.55 F 1.096
(gram. Thus, if you use the def)108 96 R 1.096
(ault callback and pass in an open \214le with)-.1 F/F1 10
/Times-Italic@0 SF(CURLOPT_WRITED)3.595 E -.37(AT)-.35 G(A\(3\))-.13 E
F0 3.595(,i)C(t)-3.595 E(will crash. Y)108 108 Q(ou should therefore a)
-1.1 E -.2(vo)-.2 G(id this to mak).2 E 2.5(ey)-.1 G
(our program run \214ne virtually e)-2.5 E -.15(ve)-.25 G(rywhere.).15 E
(\()108 132 Q F1(CURLOPT_WRITED)A -.37(AT)-.35 G(A\(3\))-.13 E F0 -.1
(wa)3.201 G 3.201(sf).1 G .701(ormerly kno)-3.201 F .701(wn as)-.25 F F1
(CURLOPT_FILE)3.202 E F0 3.202(.B)C .702(oth names still w)-3.202 F .702
(ork and do the)-.1 F(same thing\).)108 144 Q .947(If you')108 168 R
.947(re using libcurl as a win32 DLL, you MUST use the)-.5 F F1
(CURLOPT_WRITEFUNCTION\(3\))3.446 E F0 .946(if you set)3.446 F F1
(CURLOPT_WRITED)108 180 Q -.37(AT)-.35 G(A\(3\))-.13 E F0 2.5(-o)2.5 G
2.5(ry)-2.5 G(ou will e)-2.5 E(xperience crashes.)-.15 E .269
(There are of course man)108 204 R 2.769(ym)-.15 G .269
(ore options you can set, and we')-2.769 F .269(ll get back to a fe)-.1
F 2.769(wo)-.25 G 2.769(ft)-2.769 G .269(hem later)-2.769 F 2.769(.L)
-.55 G(et')-2.769 E 2.77(si)-.55 G(nstead)-2.77 E
(continue to the actual transfer:)108 216 Q
(success = curl_easy_perform\(easyhandle\);)110.5 240 Q F1
(curl_easy_perform\(3\))108 264 Q F0 .456
(will connect to the remote site, do the necessary commands and recei)
2.956 F .755 -.15(ve t)-.25 H .455(he transfer).15 F(.)-.55 E(Whene)108
276 Q -.15(ve)-.25 G 2.612(ri).15 G 2.612(tr)-2.612 G(ecei)-2.612 E -.15
(ve)-.25 G 2.612(sd).15 G .113
(ata, it calls the callback function we pre)-2.612 F .113
(viously set. The function may get one byte at)-.25 F 2.782(at)108 288 S
.282(ime, or it may get man)-2.782 F 2.782(yk)-.15 G .282
(ilobytes at once. libcurl deli)-2.782 F -.15(ve)-.25 G .282
(rs as much as possible as often as possible. Y).15 F(our)-1.1 E .022(c\
allback function should return the number of bytes it "took care of". I\
f that is not the e)108 300 R .023(xact same amount of)-.15 F
(bytes that w)108 312 Q(as passed to it, libcurl will abort the operati\
on and return with an error code.)-.1 E .138(When the transfer is compl\
ete, the function returns a return code that informs you if it succeede\
d in its mis-)108 336 R .373(sion or not. If a return code isn')108 348
R 2.873(te)-.18 G .374(nough for you, you can use the)-2.873 F F1
(CURLOPT_ERR)2.874 E(ORB)-.4 E(UFFER\(3\))-.1 E F0 .374(to point)2.874 F
(libcurl to a b)108 360 Q(uf)-.2 E(fer of yours where it')-.25 E
(ll store a human readable error message as well.)-.1 E .179
(If you then w)108 384 R .179
(ant to transfer another \214le, the handle is ready to be used ag)-.1 F
.178(ain. Mind you, it is e)-.05 F -.15(ve)-.25 G 2.678(np).15 G
(referred)-2.678 E .328(that you re-use an e)108 396 R .329
(xisting handle if you intend to mak)-.15 F 2.829(ea)-.1 G .329
(nother transfer)-2.829 F 2.829(.l)-.55 G .329
(ibcurl will then attempt to re-use)-2.829 F(the pre)108 408 Q
(vious connection.)-.25 E -.15(Fo)108 432 S 2.7(rs).15 G .2
(ome protocols, do)-2.7 F .2(wnloading a \214le can in)-.25 F -.2(vo)-.4
G(lv).2 E 2.7(eac)-.15 G .2
(omplicated process of logging in, setting the transfer)-2.7 F .21(mode\
, changing the current directory and \214nally transferring the \214le \
data. libcurl tak)108 444 R .211(es care of all that com-)-.1 F .585
(plication for you. Gi)108 456 R -.15(ve)-.25 G 3.085(ns).15 G .584
(imply the URL to a \214le, libcurl will tak)-3.085 F 3.084(ec)-.1 G
.584(are of all the details needed to get the)-3.084 F(\214le mo)108 468
Q -.15(ve)-.15 G 2.5(df).15 G(rom one machine to another)-2.5 E(.)-.55 E
/F2 10.95/Times-Bold@0 SF(Multi-thr)72 496.8 Q(eading Issues)-.197 E F0
(libcurl is thread safe b)108 508.8 Q(ut there are a fe)-.2 E 2.5(we)
-.25 G(xceptions. Refer to)-2.65 E F1(libcurl-thr)2.5 E(ead\(3\))-.37 E
F0(for more information.)2.5 E F2(When It Doesn't W)72 537.6 Q(ork)-.821
E F0 .752(There will al)108 549.6 R -.1(wa)-.1 G .753
(ys be times when the transfer f).1 F .753(ails for some reason. Y)-.1 F
.753(ou might ha)-1.1 F 1.053 -.15(ve s)-.2 H .753(et the wrong libcurl)
.15 F .554(option or misunderstood what the libcurl option actually doe\
s, or the remote serv)108 561.6 R .554(er might return non-stan-)-.15 F
(dard replies that confuse the library which then confuses your program\
.)108 573.6 Q(There')108 597.6 Q 3.199(so)-.55 G .699
(ne golden rule when these things occur: set the)-3.199 F F1
(CURLOPT_VERBOSE\(3\))3.199 E F0 .7(option to 1. It')3.2 F .7(ll cause)
-.1 F .879(the library to spe)108 609.6 R 3.379(wo)-.25 G .878(ut the e\
ntire protocol details it sends, some internal info and some recei)
-3.379 F -.15(ve)-.25 G 3.378(dp).15 G(rotocol)-3.378 E .485
(data as well \(especially when using FTP\). If you')108 621.6 R .485
(re using HTTP)-.5 F 2.985(,a)-1.11 G .486
(dding the headers in the recei)-2.985 F -.15(ve)-.25 G 2.986(do).15 G
(utput)-2.986 E .509(to study is also a cle)108 633.6 R -.15(ve)-.25 G
3.009(rw).15 G .509(ay to get a better understanding wh)-3.109 F 3.009
(yt)-.05 G .509(he serv)-3.009 F .509(er beha)-.15 F -.15(ve)-.2 G 3.009
(st).15 G .509(he w)-3.009 F .509(ay it does. Include)-.1 F
(headers in the normal body output with)108 645.6 Q F1
(CURLOPT_HEADER\(3\))2.5 E F0(set 1.)2.5 E .13(Of course, there are b)
108 669.6 R .13(ugs left. W)-.2 F 2.63(en)-.8 G .13(eed to kno)-2.63 F
2.63(wa)-.25 G .13(bout them to be able to \214x them, so we')-2.63 F
.13(re quite dependent)-.5 F .655(on your b)108 681.6 R .655
(ug reports! When you do report suspected b)-.2 F .654
(ugs in libcurl, please include as man)-.2 F 3.154(yd)-.15 G .654
(etails as you)-3.154 F .104(possibly can: a protocol dump that)108
693.6 R F1(CURLOPT_VERBOSE\(3\))2.605 E F0 .105(produces, library v)
2.605 F .105(ersion, as much as possible)-.15 F
(of your code that uses libcurl, operating system name and v)108 705.6 Q
(ersion, compiler name and v)-.15 E(ersion etc.)-.15 E(If)108 729.6 Q F1
(CURLOPT_VERBOSE\(3\))2.706 E F0 .206
(is not enough, you increase the le)2.706 F -.15(ve)-.25 G 2.705(lo).15
G 2.705(fd)-2.705 G(eb)-2.705 E .205(ug data your application recei)-.2
F .505 -.15(ve b)-.25 H(y).15 E(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(4)188.865 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F(using the)108 84 Q/F1 10
/Times-Italic@0 SF(CURLOPT_DEB)2.5 E(UGFUNCTION\(3\))-.1 E F0(.)A .854
(Getting some in-depth kno)108 108 R .854(wledge about the protocols in)
-.25 F -.2(vo)-.4 G(lv).2 E .854(ed is ne)-.15 F -.15(ve)-.25 G 3.354
(rw).15 G .855(rong, and if you')-3.354 F .855(re trying to do)-.5 F
(funn)108 120 Q 3.184(yt)-.15 G .684(hings, you might v)-3.184 F .684
(ery well understand libcurl and ho)-.15 F 3.184(wt)-.25 G 3.184(ou)
-3.184 G .684(se it better if you study the appropriate)-3.184 F
(RFC documents at least brie\215y)108 132 Q(.)-.65 E/F2 10.95
/Times-Bold@0 SF(Upload Data to a Remote Site)72 160.8 Q F0 .257
(libcurl tries to k)108 172.8 R .257(eep a protocol independent approac\
h to most transfers, thus uploading to a remote FTP site)-.1 F(is v)108
184.8 Q(ery similar to uploading data to an HTTP serv)-.15 E
(er with a PUT request.)-.15 E .723(Of course, \214rst you either creat\
e an easy handle or you re-use one e)108 208.8 R .723
(xisting one. Then you set the URL to)-.15 F(operate on just lik)108
220.8 Q 2.5(eb)-.1 G(efore. This is the remote URL, that we no)-2.5 E
2.5(ww)-.25 G(ill upload.)-2.5 E 1.041
(Since we write an application, we most lik)108 244.8 R 1.041(ely w)-.1
F 1.041(ant libcurl to get the upload data by asking us for it. T)-.1 F
(o)-.8 E(mak)108 256.8 Q 2.97(ei)-.1 G 2.97(td)-2.97 G 2.97(ot)-2.97 G
.47(hat, we set the read callback and the custom pointer libcurl will p\
ass to our read callback. The)-2.97 F(read callback should ha)108 268.8
Q .3 -.15(ve a p)-.2 H(rototype similar to:).15 E
(size_t function\(char *b)110.5 292.8 Q(ufptr)-.2 E 2.5(,s)-.4 G
(ize_t size, size_t nitems, v)-2.5 E(oid *userp\);)-.2 E .093(Where b)
108 316.8 R .093(ufptr is the pointer to a b)-.2 F(uf)-.2 E .094(fer we\
 \214ll in with data to upload and size*nitems is the size of the b)-.25
F(uf)-.2 E(fer)-.25 E .46(and therefore also the maximum amount of data\
 we can return to libcurl in this call. The 'userp' pointer is)108 328.8
R .794
(the custom pointer we set to point to a struct of ours to pass pri)108
340.8 R -.25(va)-.25 G .795(te data between the application and the).25
F(callback.)108 352.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_READFUNCTION, read_function\);)
110.5 376.8 Q(curl_easy_setopt\(easyhandle, CURLOPT_READD)110.5 400.8 Q
-1.21 -1.11(AT A)-.4 H 2.5(,&)1.11 G(\214ledata\);)-2.5 E -.7(Te)108
424.8 S(ll libcurl that we w).7 E(ant to upload:)-.1 E
(curl_easy_setopt\(easyhandle, CURLOPT_UPLO)110.5 448.8 Q(AD, 1L\);)-.35
E 5.002(Af)108 472.8 S 3.002 -.25(ew p)-5.002 H 2.502(rotocols w).25 F
(on')-.1 E 5.002(tb)-.18 G(eha)-5.002 E 2.802 -.15(ve p)-.2 H 2.502
(roperly when uploads are done without an).15 F 5.002(yp)-.15 G 2.502
(rior kno)-5.002 F 2.502(wledge of the)-.25 F -.15(ex)108 484.8 S .571
(pected \214le size. So, set the upload \214le size using the).15 F F1
(CURLOPT_INFILESIZE_LARGE\(3\))3.071 E F0 .571(for all kno)3.071 F(wn)
-.25 E(\214le sizes lik)108 496.8 Q 2.5(et)-.1 G(his[1]:)-2.5 E
(/* in this e)110.5 520.8 Q(xample, \214le_size must be an curl_of)-.15
E(f_t v)-.25 E(ariable */)-.25 E
(curl_easy_setopt\(easyhandle, CURLOPT_INFILESIZE_LARGE, \214le_size\);)
110.5 532.8 Q .96(When you call)108 556.8 R F1(curl_easy_perform\(3\))
3.46 E F0 .96(this time, it')3.46 F .959
(ll perform all the necessary operations and when it has)-.1 F(in)108
568.8 Q -.2(vo)-.4 G -.1(ke).2 G 2.89(dt).1 G .39(he upload it')-2.89 F
.39(ll call your supplied callback to get the data to upload. The progr\
am should return as)-.1 F .395(much data as possible in e)108 580.8 R
-.15(ve)-.25 G .395(ry in).15 F -.2(vo)-.4 G -.1(ke).2 G 2.895(,a).1 G
2.895(st)-2.895 G .395(hat is lik)-2.895 F .395(ely to mak)-.1 F 2.895
(et)-.1 G .395(he upload perform as f)-2.895 F .395
(ast as possible. The)-.1 F 1.184
(callback should return the number of bytes it wrote in the b)108 592.8
R(uf)-.2 E(fer)-.25 E 3.684(.R)-.55 G 1.185
(eturning 0 will signal the end of the)-3.684 F(upload.)108 604.8 Q F2
-.11(Pa)72 633.6 S(ssw).11 E(ords)-.11 E F0(Man)108 645.6 Q 3.385(yp)
-.15 G .885(rotocols use or e)-3.385 F -.15(ve)-.25 G 3.385(nr).15 G
.885(equire that user name and passw)-3.385 F .884(ord are pro)-.1 F
.884(vided to be able to do)-.15 F .884(wnload or)-.25 F
(upload the data of your choice. libcurl of)108 657.6 Q(fers se)-.25 E
-.15(ve)-.25 G(ral w).15 E(ays to specify them.)-.1 E .844
(Most protocols support that you specify the name and passw)108 681.6 R
.844(ord in the URL itself. libcurl will detect this)-.1 F
(and use them accordingly)108 693.6 Q 2.5(.T)-.65 G(his is written lik)
-2.5 E 2.5(et)-.1 G(his:)-2.5 E(protocol://user:passw)110.5 717.6 Q
(ord@e)-.1 E(xample.com/path/)-.15 E(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(5)188.865 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .459(If you need an)108
84 R 2.959(yo)-.15 G .459(dd letters in your user name or passw)-2.959 F
.459(ord, you should enter them URL encoded, as %XX)-.1 F
(where XX is a tw)108 96 Q(o-digit he)-.1 E(xadecimal number)-.15 E(.)
-.55 E .303(libcurl also pro)108 120 R .303(vides options to set v)-.15
F .303(arious passw)-.25 F .303(ords. The user name and passw)-.1 F .303
(ord as sho)-.1 F .304(wn embedded in)-.25 F 1.449
(the URL can instead get set with the)108 132 R/F1 10/Times-Italic@0 SF
(CURLOPT_USERPWD\(3\))3.949 E F0 1.448(option. The ar)3.948 F 1.448
(gument passed to libcurl)-.18 F
(should be a char * to a string in the format "user:passw)108 144 Q
(ord". In a manner lik)-.1 E 2.5(et)-.1 G(his:)-2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_USERPWD, "myname:thesecret"\);)
110.5 168 Q .384(Another case where name and passw)108 192 R .384
(ord might be needed at times, is for those users who need to authenti-)
-.1 F 1.077(cate themselv)108 204 R 1.077(es to a proxy the)-.15 F 3.577
(yu)-.15 G 1.076(se. libcurl of)-3.577 F 1.076
(fers another option for this, the)-.25 F F1(CURLOPT_PR)3.576 E -.4(OX)
-.4 G(YUSER-).4 E(PWD\(3\))108 216 Q F0 2.5(.I)C 2.5(ti)-2.5 G 2.5(su)
-2.5 G(sed quite similar to the)-2.5 E F1(CURLOPT_USERPWD\(3\))2.5 E F0
(option lik)2.5 E 2.5(et)-.1 G(his:)-2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_PR)110.5 240 Q -.4(OX)-.4 G
(YUSERPWD, "myname:thesecret"\);).4 E(There')108 264 Q 4.995(sal)-.55 G
2.495(ong time Unix "standard" w)-4.995 F 2.495
(ay of storing FTP user names and passw)-.1 F 2.495(ords, namely in the)
-.1 F .198($HOME/.netrc \214le. The \214le should be made pri)108 276 R
-.25(va)-.25 G .198
(te so that only the user may read it \(see also the "Security).25 F
.022(Considerations" chapter\), as it might contain the passw)108 288 R
.023(ord in plain te)-.1 F .023
(xt. libcurl has the ability to use this \214le)-.15 F .216
(to \214gure out what set of user name and passw)108 300 R .216
(ord to use for a particular host. As an e)-.1 F .216
(xtension to the normal)-.15 F(functionality)108 312 Q 2.807(,l)-.65 G
.307
(ibcurl also supports this \214le for non-FTP protocols such as HTTP)
-2.807 F 2.808(.T)-1.11 G 2.808(om)-3.608 G(ak)-2.808 E 2.808(ec)-.1 G
.308(url use this \214le,)-2.808 F(use the)108 324 Q F1
(CURLOPT_NETRC\(3\))2.5 E F0(option:)2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_NETRC, 1L\);)110.5 348 Q(And a v)
108 372 Q(ery basic e)-.15 E(xample of ho)-.15 E 2.5(ws)-.25 G
(uch a .netrc \214le may look lik)-2.5 E(e:)-.1 E
(machine myhost.mydomain.com)110.5 396 Q(login userlogin)110.5 408 Q
(passw)110.5 420 Q(ord secretw)-.1 E(ord)-.1 E .16(All these e)108 444 R
.16(xamples ha)-.15 F .46 -.15(ve b)-.2 H .16(een cases where the passw)
.15 F .16(ord has been optional, or at least you could lea)-.1 F .46
-.15(ve i)-.2 H 2.66(to).15 G(ut)-2.66 E 1.264(and ha)108 456 R 1.564
-.15(ve l)-.2 H 1.264(ibcurl attempt to do its job without it. There ar\
e times when the passw).15 F 1.265(ord isn')-.1 F 3.765(to)-.18 G 1.265
(ptional, lik)-3.765 F(e)-.1 E(when you')108 468 Q(re using an SSL pri)
-.5 E -.25(va)-.25 G(te k).25 E .3 -.15(ey f)-.1 H(or secure transfers.)
.15 E 1.6 -.8(To p)108 492 T(ass the kno).8 E(wn pri)-.25 E -.25(va)-.25
G(te k).25 E .3 -.15(ey p)-.1 H(assw).15 E(ord to libcurl:)-.1 E
(curl_easy_setopt\(easyhandle, CURLOPT_KEYP)110.5 516 Q(ASSWD, "k)-.92 E
-.15(ey)-.1 G(passw).15 E(ord"\);)-.1 E/F2 10.95/Times-Bold@0 SF(HTTP A)
72 544.8 Q(uthentication)-.548 E F0 .323(The pre)108 556.8 R .323
(vious chapter sho)-.25 F .323(wed ho)-.25 F 2.823(wt)-.25 G 2.823(os)
-2.823 G .323(et user name and passw)-2.823 F .322
(ord for getting URLs that require authentica-)-.1 F .046
(tion. When using the HTTP protocol, there are man)108 568.8 R 2.546(yd)
-.15 G(if)-2.546 E .047(ferent w)-.25 F .047(ays a client can pro)-.1 F
.047(vide those credentials to)-.15 F .339(the serv)108 580.8 R .339
(er and you can control which w)-.15 F .339
(ay libcurl will \(attempt to\) use them. The def)-.1 F .338
(ault HTTP authentica-)-.1 F .719
(tion method is called 'Basic', which is sending the name and passw)108
592.8 R .72(ord in clear)-.1 F(-te)-.2 E .72(xt in the HTTP request,)
-.15 F(base64-encoded. This is insecure.)108 604.8 Q .024
(At the time of this writing, libcurl can be b)108 628.8 R .024
(uilt to use: Basic, Digest, NTLM, Ne)-.2 F .024(gotiate \(SPNEGO\). Y)
-.15 F .023(ou can)-1.1 F(tell libcurl which one to use with)108 640.8 Q
F1(CURLOPT_HTTP)2.5 E -.5(AU)-.9 G(TH\(3\)).5 E F0(as in:)2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_HTTP)110.5 664.8 Q -.55(AU)-.92 G
(TH, CURLA).55 E(UTH_DIGEST\);)-.55 E .028
(And when you send authentication to a proxy)108 688.8 R 2.528(,y)-.65 G
.028(ou can also set authentication type the same w)-2.528 F .029(ay b)
-.1 F .029(ut instead)-.2 F(with)108 700.8 Q F1(CURLOPT_PR)2.5 E -.4(OX)
-.4 G -.5(YAU).4 G(TH\(3\)).5 E F0(:)A
(curl_easy_setopt\(easyhandle, CURLOPT_PR)110.5 724.8 Q -.4(OX)-.4 G
-.65 -1.2(YA U).4 H(TH, CURLA)1.2 E(UTH_NTLM\);)-.55 E(libcurl 7.62.0)72
768 Q(September 23, 2018)140.255 E(6)188.865 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .239
(Both these options allo)108 84 R 2.739(wy)-.25 G .239
(ou to set multiple types \(by ORing them together\), to mak)-2.739 F
2.739(el)-.1 G .238(ibcurl pick the most)-2.739 F .397
(secure one out of the types the serv)108 96 R .398
(er/proxy claims to support. This method does ho)-.15 F(we)-.25 E -.15
(ve)-.25 G 2.898(ra).15 G .398(dd a round-trip)-2.898 F
(since libcurl must \214rst ask the serv)108 108 Q(er what it supports:)
-.15 E(curl_easy_setopt\(easyhandle, CURLOPT_HTTP)110.5 132 Q -.55(AU)
-.92 G(TH,).55 E(CURLA)110.5 144 Q(UTH_DIGEST|CURLA)-.55 E(UTH_B)-.55 E
(ASIC\);)-.35 E -.15(Fo)108 168 S 3.092(rc).15 G(on)-3.092 E -.15(ve)-.4
G .592(nience, you can use the 'CURLA).15 F .592
(UTH_ANY' de\214ne \(instead of a list with speci\214c types\) which)
-.55 F(allo)108 180 Q(ws libcurl to use whate)-.25 E -.15(ve)-.25 G 2.5
(rm).15 G(ethod it w)-2.5 E(ants.)-.1 E 1.02
(When asking for multiple types, libcurl will pick the a)108 204 R -.25
(va)-.2 G 1.021(ilable one it considers "best" in its o).25 F 1.021
(wn internal)-.25 F(order of preference.)108 216 Q/F1 10.95/Times-Bold@0
SF(HTTP POST)72 244.8 Q(ing)-.197 E F0 1.88 -.8(We g)108 256.8 T .28
(et man).8 F 2.78(yq)-.15 G .28(uestions re)-2.78 F -.05(ga)-.15 G .28
(rding ho).05 F 2.78(wt)-.25 G 2.78(oi)-2.78 G .279
(ssue HTTP POSTs with libcurl the proper w)-2.78 F(ay)-.1 E 2.779(.T)
-.65 G .279(his chapter will)-2.779 F(thus include e)108 268.8 Q
(xamples using both dif)-.15 E(ferent v)-.25 E
(ersions of HTTP POST that libcurl supports.)-.15 E .512(The \214rst v)
108 292.8 R .512(ersion is the simple POST)-.15 F 3.012(,t)-.74 G .512
(he most common v)-3.012 F .513
(ersion, that most HTML pages using the <form>)-.15 F(tag uses. W)108
304.8 Q 2.5(ep)-.8 G(ro)-2.5 E(vide a pointer to the data and tell libc\
url to post it all to the remote site:)-.15 E
(char *data="name=daniel&project=curl";)118 328.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_POSTFIELDS, data\);)118 340.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_URL, "http://posthere.com/"\);)
118 352.8 Q(curl_easy_perform\(easyhandle\); /* post a)118 376.8 Q -.1
(wa)-.15 G(y! */).1 E .132
(Simple enough, huh? Since you set the POST options with the)108 400.8 R
/F2 10/Times-Italic@0 SF(CURLOPT_POSTFIELDS\(3\))2.632 E F0 2.632(,t)C
.132(his automati-)-2.632 F
(cally switches the handle to use POST in the upcoming request.)108
412.8 Q .884(Ok, so what if you w)108 436.8 R .884
(ant to post binary data that also requires you to set the Content-T)-.1
F .884(ype: header of the)-.8 F .552(post? W)108 448.8 R .552
(ell, binary posts pre)-.8 F -.15(ve)-.25 G .551(nt libcurl from being \
able to do strlen\(\) on the data to \214gure out the size, so).15 F
1.308(therefore we must tell libcurl the size of the post data. Setting\
 headers in libcurl requests are done in a)108 460.8 R(generic w)108
472.8 Q(ay)-.1 E 2.5(,b)-.65 G 2.5(yb)-2.5 G(uilding a list of our o)
-2.7 E(wn headers and then passing that list to libcurl.)-.25 E
(struct curl_slist *headers=NULL;)110.5 496.8 Q
(headers = curl_slist_append\(headers, "Content-T)110.5 508.8 Q(ype: te)
-.8 E(xt/xml"\);)-.15 E(/* post binary data */)110.5 532.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_POSTFIELDS, binaryptr\);)110.5
544.8 Q(/* set the size of the post\214elds data */)110.5 568.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_POSTFIELDSIZE, 23L\);)110.5 580.8
Q(/* pass our list of custom made headers */)110.5 604.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_HTTPHEADER, headers\);)110.5
616.8 Q(curl_easy_perform\(easyhandle\); /* post a)110.5 640.8 Q -.1(wa)
-.15 G(y! */).1 E
(curl_slist_free_all\(headers\); /* free the header list */)110.5 664.8
Q 2.318(While the simple e)108 688.8 R 2.318(xamples abo)-.15 F 2.618
-.15(ve c)-.15 H -.15(ove).15 G 4.818(rt).15 G 2.318
(he majority of all cases where HTTP POST operations are)-4.818 F .554
(required, the)108 700.8 R 3.054(yd)-.15 G(on')-3.054 E 3.054(td)-.18 G
3.054(om)-3.054 G .555(ulti-part formposts. Multi-part formposts were i\
ntroduced as a better w)-3.054 F .555(ay to post)-.1 F 1.377
(\(possibly lar)108 712.8 R 1.376(ge\) binary data and were \214rst doc\
umented in the RFC1867 \(updated in RFC2388\). The)-.18 F(y')-.15 E(re)
-.5 E .725(called multi-part because the)108 724.8 R(y')-.15 E .725
(re b)-.5 F .725(uilt by a chain of parts, each part being a single uni\
t of data. Each part)-.2 F(libcurl 7.62.0)72 768 Q(September 23, 2018)
140.255 E(7)188.865 E 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .018(has its o)108 84 R
.018(wn name and contents. Y)-.25 F .018(ou can in f)-1.1 F .018
(act create and post a multi-part formpost with the re)-.1 F .017
(gular libcurl)-.15 F 1.003(POST support described abo)108 96 R -.15(ve)
-.15 G 3.503(,b).15 G 1.003(ut that w)-3.703 F 1.003
(ould require that you b)-.1 F 1.003(uild a formpost yourself and pro)
-.2 F 1.004(vide to)-.15 F .4(libcurl. T)108 108 R 2.9(om)-.8 G(ak)-2.9
E 2.9(et)-.1 G .4(hat easier)-2.9 F 2.9(,l)-.4 G .4(ibcurl pro)-2.9 F
.399(vides a MIME API consisting in se)-.15 F -.15(ve)-.25 G .399
(ral functions: using those, you).15 F .86
(can create and \214ll a multi-part form.)108 120 R(Function)5.86 E/F1
10/Times-Italic@0 SF(curl_mime_init\(3\))3.36 E F0 .86
(creates a multi-part body; you can then)3.36 F .524(append ne)108 132 R
3.024(wp)-.25 G .524(arts to a multi-part body using)-3.024 F F1
(curl_mime_addpart\(3\))3.024 E F0 5.523(.T)C .523
(here are three possible data sources)-5.523 F .953
(for a part: memory using)108 144 R F1(curl_mime_data\(3\))3.453 E F0
3.453<2c8c>C .953(le using)-3.453 F F1(curl_mime_\214ledata\(3\))3.453 E
F0 .954(and user)3.454 F .954(-de\214ned data read)-.2 F 2.26
(callback using)108 156 R F1(curl_mime_data_cb\(3\))4.759 E F0(.)A F1
(curl_mime_name\(3\))7.259 E F0 2.259(sets a part')4.759 F 4.759(s\()
-.55 G 2.259(i.e.: form \214eld\) name, while)-4.759 F F1
(curl_mime_\214lename\(3\))108 168 Q F0 .533
(\214lls in the remote \214le name. W)3.032 F(ith)-.4 E F1
(curl_mime_type\(3\))3.033 E F0 3.033(,y)C .533
(ou can tell the MIME type)-3.033 F 1.069(of a part,)108 180 R F1
(curl_mime_header)3.569 E(s\(3\))-.1 E F0(allo)3.569 E 1.069
(ws de\214ning the part')-.25 F 3.569(sh)-.55 G 1.068
(eaders. When a multi-part body is no longer)-3.569 F
(needed, you can destro)108 192 Q 2.5(yi)-.1 G 2.5(tu)-2.5 G(sing)-2.5 E
F1(curl_mime_fr)2.5 E(ee\(3\))-.37 E F0(.)A 1.048(The follo)108 216 R
1.048(wing e)-.25 F 1.048(xample sets tw)-.15 F 3.549(os)-.1 G 1.049
(imple te)-3.549 F 1.049(xt parts with plain te)-.15 F 1.049
(xtual contents, and then a \214le with binary)-.15 F
(contents and uploads the whole thing.)108 228 Q
(curl_mime *multipart = curl_mime_init\(easyhandle\);)110.5 252 Q
(curl_mimepart *part = curl_mime_addpart\(mutipart\);)110.5 264 Q
(curl_mime_name\(part, "name"\);)110.5 276 Q
(curl_mime_data\(part, "daniel", CURL_ZER)110.5 288 Q(O_TERMIN)-.4 E
-1.11(AT)-.35 G(ED\);)1.11 E(part = curl_mime_addpart\(mutipart\);)110.5
300 Q(curl_mime_name\(part, "project"\);)110.5 312 Q
(curl_mime_data\(part, "curl", CURL_ZER)110.5 324 Q(O_TERMIN)-.4 E -1.11
(AT)-.35 G(ED\);)1.11 E(part = curl_mime_addpart\(mutipart\);)110.5 336
Q(curl_mime_name\(part, "logotype-image"\);)110.5 348 Q
(curl_mime_\214ledata\(part, "curl.png"\);)110.5 360 Q
(/* Set the form info */)110.5 384 Q
(curl_easy_setopt\(easyhandle, CURLOPT_MIMEPOST)110.5 396 Q 2.5(,m)-.74
G(ultipart\);)-2.5 E(curl_easy_perform\(easyhandle\); /* post a)110.5
420 Q -.1(wa)-.15 G(y! */).1 E(/* free the post data ag)110.5 444 Q
(ain */)-.05 E(curl_mime_free\(multipart\);)110.5 456 Q 1.934 -.8(To p)
108 480 T .333(ost multiple \214les for a single form \214eld, you must\
 supply each \214le in a separate part, all with the same).8 F .571
(\214eld name. Although function)108 492 R F1(curl_mime_subparts\(3\))
3.071 E F0 .571(implements nested multi-parts, this w)3.071 F .571
(ay of multiple)-.1 F
(\214les posting is deprecated by RFC 7578, chapter 4.3.)108 504 Q 1.6
-.8(To s)108 528 T
(et the data source from an already opened FILE pointer).8 E 2.5(,u)-.4
G(se:)-2.5 E
(curl_mime_data_cb\(part, \214lesize, \(curl_read_callback\) fread,)
110.5 552 Q(\(curl_seek_callback\) fseek, NULL, \214lepointer\);)155.5
564 Q 2.635(Ad)108 588 S(eprecated)-2.635 E F1(curl_formadd\(3\))2.635 E
F0 .135(function is still supported in libcurl.)2.635 F .135
(It should ho)5.135 F(we)-.25 E -.15(ve)-.25 G 2.634(rn).15 G .134
(ot be used an)-2.634 F(ymore)-.15 E .01(for ne)108 600 R 2.51(wd)-.25 G
.01(esigns and programs using it ought to be con)-2.51 F -.15(ve)-.4 G
.01(rted to the MIME API. It is ho).15 F(we)-.25 E -.15(ve)-.25 G 2.51
(rd).15 G .01(escribed here)-2.51 F(as an aid to con)108 612 Q -.15(ve)
-.4 G(rsion.).15 E(Using)108 636 Q F1(curl_formadd)2.5 E F0 2.5(,y)C
(ou add parts to the form. When you')-2.5 E
(re done adding parts, you post the whole form.)-.5 E(The MIME API e)108
660 Q(xample abo)-.15 E .3 -.15(ve i)-.15 H 2.5(se).15 G
(xpressed as follo)-2.65 E(ws using this function:)-.25 E
(struct curl_httppost *post=NULL;)110.5 684 Q
(struct curl_httppost *last=NULL;)110.5 696 Q
(curl_formadd\(&post, &last,)110.5 708 Q(CURLFORM_COPYN)143 720 Q
(AME, "name",)-.35 E(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255
E(8)188.865 E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F
(CURLFORM_COPYCONTENTS, "daniel", CURLFORM_END\);)143 84 Q
(curl_formadd\(&post, &last,)110.5 96 Q(CURLFORM_COPYN)143 108 Q
(AME, "project",)-.35 E(CURLFORM_COPYCONTENTS, "curl", CURLFORM_END\);)
143 120 Q(curl_formadd\(&post, &last,)110.5 132 Q(CURLFORM_COPYN)143 144
Q(AME, "logotype-image",)-.35 E(CURLFORM_FILECONTENT)143 156 Q 2.5(,")
-.74 G(curl.png", CURLFORM_END\);)-2.5 E(/* Set the form info */)110.5
180 Q(curl_easy_setopt\(easyhandle, CURLOPT_HTTPPOST)110.5 192 Q 2.5(,p)
-.74 G(ost\);)-2.5 E(curl_easy_perform\(easyhandle\); /* post a)110.5
216 Q -.1(wa)-.15 G(y! */).1 E(/* free the post data ag)110.5 240 Q
(ain */)-.05 E(curl_formfree\(post\);)110.5 252 Q .113(Multipart formpo\
sts are chains of parts using MIME-style separators and headers. It mea\
ns that each one of)108 276 R .347(these separate parts get a fe)108 288
R 2.847(wh)-.25 G .348(eaders set that describe the indi)-2.847 F .348
(vidual content-type, size etc. T)-.25 F 2.848(oe)-.8 G .348(nable your)
-2.848 F 1.382(application to handicraft this formpost e)108 300 R -.15
(ve)-.25 G 3.881(nm).15 G 1.381(ore, libcurl allo)-3.881 F 1.381
(ws you to supply your o)-.25 F 1.381(wn set of custom)-.25 F .277
(headers to such an indi)108 312 R .277(vidual form part. Y)-.25 F .277
(ou can of course supply headers to as man)-1.1 F 2.777(yp)-.15 G .277
(arts as you lik)-2.777 F .277(e, b)-.1 F(ut)-.2 E(this little e)108 324
Q(xample will sho)-.15 E 2.5(wh)-.25 G .5 -.25(ow y)-2.5 H(ou set heade\
rs to one speci\214c part when you add that to the post handle:).25 E
(struct curl_slist *headers=NULL;)110.5 348 Q
(headers = curl_slist_append\(headers, "Content-T)110.5 360 Q(ype: te)
-.8 E(xt/xml"\);)-.15 E(curl_formadd\(&post, &last,)110.5 384 Q
(CURLFORM_COPYN)143 396 Q(AME, "logotype-image",)-.35 E
(CURLFORM_FILECONTENT)143 408 Q 2.5(,")-.74 G(curl.xml",)-2.5 E
(CURLFORM_CONTENTHEADER, headers,)143 420 Q(CURLFORM_END\);)143 432 Q
(curl_easy_perform\(easyhandle\); /* post a)110.5 456 Q -.1(wa)-.15 G
(y! */).1 E(curl_formfree\(post\); /* free post */)110.5 480 Q
(curl_slist_free_all\(headers\); /* free custom header list */)110.5 492
Q 1.198(Since all options on an easyhandle are "stick)108 516 R 1.197
(y", the)-.15 F 3.697(yr)-.15 G 1.197(emain the same until changed e)
-3.697 F -.15(ve)-.25 G 3.697(ni).15 G 3.697(fy)-3.697 G 1.197
(ou do call)-3.697 F/F1 10/Times-Italic@0 SF(curl_easy_perform\(3\))108
528 Q F0 2.95(,y)C .45(ou may need to tell curl to go back to a plain G\
ET request if you intend to do one)-2.95 F .884(as your ne)108 540 R
.884(xt request. Y)-.15 F .884
(ou force an easyhandle to go back to GET by using the)-1.1 F F1
(CURLOPT_HTTPGET\(3\))3.383 E F0(option:)108 552 Q
(curl_easy_setopt\(easyhandle, CURLOPT_HTTPGET)110.5 576 Q 2.5(,1)-.74 G
(L\);)-2.5 E .303(Just setting)108 600 R F1(CURLOPT_POSTFIELDS\(3\))
2.803 E F0 .303(to "" or NULL will *not* stop libcurl from doing a POST)
2.803 F 2.804(.I)-.74 G 2.804(tw)-2.804 G(ill)-2.804 E(just mak)108 612
Q 2.5(ei)-.1 G 2.5(tP)-2.5 G(OST without an)-2.5 E 2.5(yd)-.15 G
(ata to send!)-2.5 E/F2 10.95/Times-Bold@0 SF(Con)72 640.8 Q -.11(ve)
-.438 G(rting fr).11 E(om depr)-.197 E(ecated f)-.197 E
(orm API to MIME API)-.274 E F0 -.15(Fo)108 652.8 S(ur rules ha).15 E .3
-.15(ve t)-.2 H 2.5(ob).15 G 2.5(er)-2.5 G(espected in b)-2.5 E
(uilding the multi-part:)-.2 E 2.5(-T)108 664.8 S
(he easy handle must be created before b)-2.5 E(uilding the multi-part.)
-.2 E 2.5(-T)108 676.8 S(he multi-part is al)-2.5 E -.1(wa)-.1 G
(ys created by a call to curl_mime_init\(easyhandle\).).1 E 2.5(-E)108
688.8 S
(ach part is created by a call to curl_mime_addpart\(multipart\).)-2.5 E
4.794(-W)108 700.8 S 2.294
(hen complete, the multi-part must be bound to the easy handle using)
-4.794 F F1(CURLOPT_MIMEPOST\(3\))4.793 E F0(instead of)108 712.8 Q F1
(CURLOPT_HTTPPOST\(3\))2.5 E F0(.)A(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(9)188.865 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F(Here are some e)108 84 Q
(xample of)-.15 E/F1 10/Times-Italic@0 SF(curl_formadd)2.5 E F0
(calls to MIME API sequences:)2.5 E(curl_formadd\(&post, &last,)110.5
108 Q(CURLFORM_COPYN)143 120 Q(AME, "id",)-.35 E
(CURLFORM_COPYCONTENTS, "daniel", CURLFORM_END\);)143 132 Q
(CURLFORM_CONTENTHEADER, headers,)143 144 Q(CURLFORM_END\);)143 156 Q
(becomes:)108 168 Q(part = curl_mime_addpart\(multipart\);)110.5 180 Q
(curl_mime_name\(part, "id"\);)110.5 192 Q
(curl_mime_data\(part, "daniel", CURL_ZER)110.5 204 Q(O_TERMIN)-.4 E
-1.11(AT)-.35 G(ED\);)1.11 E(curl_mime_headers\(part, headers, F)110.5
216 Q(ALSE\);)-.74 E .505(Setting the last)108 240 R F1
(curl_mime_header)3.005 E(s)-.1 E F0(ar)3.005 E .506(gument to TR)-.18 F
.506(UE w)-.4 F .506(ould ha)-.1 F .806 -.15(ve c)-.2 H .506
(aused the headers to be automatically).15 F(released upon destro)108
252 Q(yed the multi-part, thus sa)-.1 E(ving a clean-up call to)-.2 E F1
(curl_slist_fr)2.5 E(ee_all\(3\))-.37 E F0(.)A
(curl_formadd\(&post, &last,)110.5 276 Q(CURLFORM_PTRN)143 288 Q
(AME, "logotype-image",)-.35 E(CURLFORM_FILECONTENT)143 300 Q 2.5(,")
-.74 G(-",)-2.5 E(CURLFORM_END\);)143 312 Q(becomes:)108 324 Q
(part = curl_mime_addpart\(multipart\);)110.5 336 Q
(curl_mime_name\(part, "logotype-image"\);)110.5 348 Q
(curl_mime_data_cb\(part, \(curl_of)110.5 360 Q
(f_t\) -1, fread, fseek, NULL, stdin\);)-.25 E F1(curl_mime_name)108 384
Q F0(al)6.94 E -.1(wa)-.1 G 4.439(ys copies the \214eld name. The speci\
al \214le name "-" is not supported by).1 F F1(curl_mime_\214le)108 396
Q F0 2.711(:t)C 2.711(or)-2.711 G .212(ead an open \214le, use a callba\
ck source using fread\(\). The transfer will be chunk)-2.711 F .212
(ed since)-.1 F(the data size is unkno)108 408 Q(wn.)-.25 E
(curl_formadd\(&post, &last,)110.5 432 Q(CURLFORM_COPYN)143 444 Q
(AME, "data\214le[]",)-.35 E(CURLFORM_FILE, "\214le1",)143 456 Q
(CURLFORM_FILE, "\214le2",)143 468 Q(CURLFORM_END\);)143 480 Q(becomes:)
108 492 Q(part = curl_mime_addpart\(multipart\);)110.5 504 Q
(curl_mime_name\(part, "data\214le[]"\);)110.5 516 Q
(curl_mime_\214ledata\(part, "\214le1"\);)110.5 528 Q
(part = curl_mime_addpart\(multipart\);)110.5 540 Q
(curl_mime_name\(part, "data\214le[]"\);)110.5 552 Q
(curl_mime_\214ledata\(part, "\214le2"\);)110.5 564 Q .003
(The deprecated multipart/mix)108 588 R .003
(ed implementation of multiple \214les \214eld is translated to tw)-.15
F 2.503(od)-.1 G .002(istinct parts with)-2.503 F(the same name.)108 600
Q(curl_easy_setopt\(easyhandle, CURLOPT_READFUNCTION, myreadfunc\);)
110.5 624 Q(curl_formadd\(&post, &last,)110.5 636 Q(CURLFORM_COPYN)143
648 Q(AME, "stream",)-.35 E(CURLFORM_STREAM, ar)143 660 Q(g,)-.18 E
(CURLFORM_CONTENTLEN, \(curl_of)143 672 Q(f_t\) datasize,)-.25 E
(CURLFORM_FILEN)143 684 Q(AME, "archi)-.35 E -.15(ve)-.25 G(.zip",).15 E
(CURLFORM_CONTENTTYPE, "application/zip",)143 696 Q(CURLFORM_END\);)143
708 Q(becomes:)108 720 Q(libcurl 7.62.0)72 768 Q(September 23, 2018)
140.255 E(10)183.865 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F
(part = curl_mime_addpart\(multipart\);)110.5 84 Q
(curl_mime_name\(part, "stream"\);)110.5 96 Q
(curl_mime_data_cb\(part, \(curl_of)110.5 108 Q(f_t\) datasize,)-.25 E
(myreadfunc, NULL, NULL, ar)155.5 120 Q(g\);)-.18 E
(curl_mime_\214lename\(part, "archi)110.5 132 Q -.15(ve)-.25 G(.zip"\);)
.15 E(curl_mime_type\(part, "application/zip"\);)110.5 144 Q/F1 10
/Times-Italic@0 SF(CURLOPT_READFUNCTION)108 168 Q F0 1.416(callback is \
not used: it is replace by directly setting the part source data)3.915 F
(from the callback read function.)108 180 Q(curl_formadd\(&post, &last,)
110.5 204 Q(CURLFORM_COPYN)143 216 Q(AME, "mem\214le",)-.35 E
(CURLFORM_B)143 228 Q(UFFER, "mem\214le.bin",)-.1 E(CURLFORM_B)143 240 Q
(UFFERPTR, datab)-.1 E(uf)-.2 E(fer)-.25 E(,)-.4 E(CURLFORM_B)143 252 Q
(UFFERLENGTH, \(long\) sizeof datab)-.1 E(uf)-.2 E(fer)-.25 E(,)-.4 E
(CURLFORM_END\);)143 264 Q(becomes:)108 276 Q
(part = curl_mime_addpart\(multipart\);)110.5 288 Q
(curl_mime_name\(part, "mem\214le"\);)110.5 300 Q
(curl_mime_data\(part, datab)110.5 312 Q(uf)-.2 E(fer)-.25 E 2.5(,\()-.4
G(curl_of)-2.5 E(f_t\) sizeof datab)-.25 E(uf)-.2 E(fer\);)-.25 E
(curl_mime_\214lename\(part, "mem\214le.bin"\);)110.5 324 Q F1
(curl_mime_data)108 348 Q F0(al)2.5 E -.1(wa)-.1 G
(ys copies the initial data: data b).1 E(uf)-.2 E
(fer is thus free for immediate reuse.)-.25 E
(curl_formadd\(&post, &last,)110.5 372 Q(CURLFORM_COPYN)143 384 Q
(AME, "message",)-.35 E(CURLFORM_FILECONTENT)143 396 Q 2.5(,")-.74 G
(msg.txt",)-2.5 E(CURLFORM_END\);)143 408 Q(becomes:)108 420 Q
(part = curl_mime_addpart\(multipart\);)110.5 432 Q
(curl_mime_name\(part, "message"\);)110.5 444 Q
(curl_mime_\214ledata\(part, "msg.txt"\);)110.5 456 Q
(curl_mime_\214lename\(part, NULL\);)110.5 468 Q .402(Use of)108 492 R
F1(curl_mime_\214ledata)2.902 E F0 .402
(sets the remote \214le name as a side ef)2.902 F .401
(fect: it is therefore necessary to clear it for)-.25 F F1
(CURLFORM_FILECONTENT)108 504 Q F0(emulation.)2.5 E/F2 10.95
/Times-Bold@0 SF(Sho)72 532.8 Q(wing Pr)-.11 E(ogr)-.197 E(ess)-.197 E
F0 -.15(Fo)108 544.8 S 2.805(rh).15 G .305
(istorical and traditional reasons, libcurl has a b)-2.805 F .306
(uilt-in progress meter that can be switched on and then)-.2 F(mak)108
556.8 Q(es it present a progress meter in your terminal.)-.1 E .408
(Switch on the progress meter by)108 580.8 R 2.908(,o)-.65 G .408
(ddly enough, setting)-2.908 F F1(CURLOPT_NOPR)2.908 E(OGRESS\(3\))-.4 E
F0 .407(to zero. This option)2.907 F(is set to 1 by def)108 592.8 Q
(ault.)-.1 E -.15(Fo)108 616.8 S 3.218(rm).15 G .718
(ost applications ho)-3.218 F(we)-.25 E -.15(ve)-.25 G 1.518 -.4(r, t)
.15 H .718(he b).4 F .718(uilt-in progress meter is useless and what in\
stead is interesting is the)-.2 F .231(ability to specify a progress ca\
llback. The function pointer you pass to libcurl will then be called on\
 irre)108 628.8 R(gu-)-.15 E(lar interv)108 640.8 Q
(als with information about the current transfer)-.25 E(.)-.55 E .102
(Set the progress callback by using)108 664.8 R F1(CURLOPT_PR)2.602 E
(OGRESSFUNCTION\(3\))-.4 E F0 2.602(.A)C .103
(nd pass a pointer to a function)-2.602 F(that matches this prototype:)
108 676.8 Q(int progress_callback\(v)110.5 700.8 Q(oid *clientp,)-.2 E
(double dltotal,)165.5 712.8 Q(double dlno)165.5 724.8 Q -.65(w,)-.25 G
(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(11)183.865 E 0 Cg
EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F(double ultotal,)165.5 84
Q(double ulno)165.5 96 Q(w\);)-.25 E .21(If an)108 120 R 2.71(yo)-.15 G
2.71(ft)-2.71 G .21(he input ar)-2.71 F .21(guments is unkno)-.18 F .21
(wn, a 0 will be passed. The \214rst ar)-.25 F .21
(gument, the 'clientp' is the pointer)-.18 F(you pass to libcurl with)
108 132 Q/F1 10/Times-Italic@0 SF(CURLOPT_PR)2.5 E(OGRESSD)-.4 E -.37
(AT)-.35 G(A\(3\))-.13 E F0 2.5(.l)C(ibcurl w)-2.5 E(on')-.1 E 2.5(tt)
-.18 G(ouch it.)-2.5 E/F2 10.95/Times-Bold@0 SF(libcurl with C++)72
160.8 Q F0(There')108 172.8 Q 2.5(sb)-.55 G
(asically only one thing to k)-2.5 E
(eep in mind when using C++ instead of C when interf)-.1 E
(acing libcurl:)-.1 E(The callbacks CANNO)108 196.8 Q 2.5(Tb)-.4 G 2.5
(en)-2.5 G(on-static class member functions)-2.5 E(Example C++ code:)108
220.8 Q(class A)108 244.8 Q(Class {)-.4 E(static size_t write_data\(v)
118 256.8 Q(oid *ptr)-.2 E 2.5(,s)-.4 G(ize_t size, size_t nmemb,)-2.5 E
-.2(vo)180.5 268.8 S(id *ourpointer\)).2 E({)118 280.8 Q
(/* do what you w)123 292.8 Q(ant with the data */)-.1 E(})118 304.8 Q
(})110.5 316.8 Q F2(Pr)72 345.6 Q(oxies)-.197 E F0 .494
(What "proxy" means according to Merriam-W)108 357.6 R .495
(ebster: "a person authorized to act for another" b)-.8 F .495
(ut also "the)-.2 F(agenc)108 369.6 Q 1.3 -.65(y, f)-.15 H
(unction, or of).65 E
(\214ce of a deputy who acts as a substitute for another".)-.25 E 1.78
(Proxies are e)108 393.6 R 1.78
(xceedingly common these days. Companies often only of)-.15 F 1.78
(fer Internet access to emplo)-.25 F(yees)-.1 E 1.732
(through their proxies. Netw)108 405.6 R 1.732(ork clients or user)-.1 F
1.732(-agents ask the proxy for documents, the proxy does the)-.2 F
(actual request and then it returns them.)108 417.6 Q .419
(libcurl supports SOCKS and HTTP proxies. When a gi)108 441.6 R -.15(ve)
-.25 G 2.918(nU).15 G .418(RL is w)-2.918 F .418
(anted, libcurl will ask the proxy for it)-.1 F(instead of trying to co\
nnect to the actual host identi\214ed in the URL.)108 453.6 Q(If you')
108 477.6 Q(re using a SOCKS proxy)-.5 E 2.5(,y)-.65 G
(ou may \214nd that libcurl doesn')-2.5 E 2.5(tq)-.18 G
(uite support all operations through it.)-2.5 E -.15(Fo)108 501.6 S
3.091(rH).15 G .591(TTP proxies: the f)-3.091 F .591(act that the proxy\
 is an HTTP proxy puts certain restrictions on what can actually)-.1 F
1.143(happen. A requested URL that might not be a HTTP URL will be stil\
l be passed to the HTTP proxy to)108 513.6 R(deli)108 525.6 Q -.15(ve)
-.25 G 3.024(rb).15 G .524(ack to libcurl. This happens transparently)
-3.024 F 3.024(,a)-.65 G .524(nd an application may not need to kno)
-3.024 F 1.824 -.65(w. I s)-.25 H .525(ay "may",).65 F .756
(because at times it is v)108 537.6 R .756
(ery important to understand that all operations o)-.15 F -.15(ve)-.15 G
3.256(ra).15 G 3.256(nH)-3.256 G .756(TTP proxy use the HTTP)-3.256 F
1.092(protocol. F)108 549.6 R 1.092(or e)-.15 F 1.092(xample, you can')
-.15 F 3.592(ti)-.18 G -1.9 -.4(nv o)-3.592 H 1.292 -.1(ke y).4 H 1.092
(our o).1 F 1.092(wn custom FTP commands or e)-.25 F -.15(ve)-.25 G
3.592(np).15 G 1.092(roper FTP directory)-3.592 F(listings.)108 561.6 Q
(Proxy Options)108 590.4 Q 1.6 -.8(To t)144 614.4 T
(ell libcurl to use a proxy at a gi).8 E -.15(ve)-.25 G 2.5(np).15 G
(ort number:)-2.5 E(curl_easy_setopt\(easyhandle, CURLOPT_PR)146.5 638.4
Q -.4(OX)-.4 G 2.58 -1.29(Y, ").4 H(proxy-host.com:8080"\);)1.29 E .358
(Some proxies require user authentication before allo)144 662.4 R .357
(wing a request, and you pass that information)-.25 F(similar to this:)
144 674.4 Q(curl_easy_setopt\(easyhandle, CURLOPT_PR)146.5 698.4 Q -.4
(OX)-.4 G(YUSERPWD, "user:passw).4 E(ord"\);)-.1 E .85(If you w)144
722.4 R .85(ant to, you can specify the host name only in the)-.1 F F1
(CURLOPT_PR)3.35 E -.4(OX)-.4 G(Y\(3\)).4 E F0 .85(option, and set)3.35
F(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(12)183.865 E 0 Cg
EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F
(the port number separately with)144 84 Q/F1 10/Times-Italic@0 SF
(CURLOPT_PR)2.5 E -.4(OX)-.4 G(YPORT\(3\)).4 E F0(.)A -.7(Te)144 108 S
1.47(ll libcurl what kind of proxy it is with).7 F F1(CURLOPT_PR)3.969 E
-.4(OX)-.4 G(YTYPE\(3\)).4 E F0 1.469(\(if not, it will def)3.969 F
1.469(ault to)-.1 F(assume an HTTP proxy\):)144 120 Q
(curl_easy_setopt\(easyhandle, CURLOPT_PR)146.5 144 Q -.4(OX)-.4 G
(YTYPE, CURLPR).4 E -.4(OX)-.4 G(Y_SOCKS4\);).4 E(En)108 172.8 Q
(vironment V)-.4 E(ariables)-1.11 E .63
(libcurl automatically checks and uses a set of en)144 196.8 R .631
(vironment v)-.4 F .631(ariables to kno)-.25 F 3.131(ww)-.25 G .631
(hat proxies to use)-3.131 F .055
(for certain protocols. The names of the v)144 208.8 R .055
(ariables are follo)-.25 F .055(wing an ancient de f)-.25 F .055
(acto standard and are)-.1 F -.2(bu)144 220.8 S 1.628
(ilt up as "[protocol]_proxy" \(note the lo).2 F 1.628
(wer casing\). Which mak)-.25 F 1.629(es the v)-.1 F 1.629
(ariable 'http_proxy')-.25 F(check)144 232.8 Q .506
(ed for a name of a proxy to use when the input URL is HTTP)-.1 F 3.006
(.F)-1.11 G(ollo)-3.156 E .505(wing the same rule, the)-.25 F -.25(va)
144 244.8 S .477(riable named 'ftp_proxy' is check).25 F .477
(ed for FTP URLs. Ag)-.1 F .477(ain, the proxies are al)-.05 F -.1(wa)
-.1 G .478(ys HTTP prox-).1 F(ies, the dif)144 256.8 Q
(ferent names of the v)-.25 E(ariables simply allo)-.25 E(ws dif)-.25 E
(ferent HTTP proxies to be used.)-.25 E 3.818(The proxy en)144 280.8 R
3.818(vironment v)-.4 F 3.818
(ariable contents should be in the format "[protocol://][user:pass-)-.25
F -.1(wo)144 292.8 S 1.32(rd@]machine[:port]". Where the protocol:// pa\
rt is simply ignored if present \(so http://proxy).1 F 1.458(and bluerk\
://proxy will do the same\) and the optional port number speci\214es on\
 which port the)144 304.8 R .476
(proxy operates on the host. If not speci\214ed, the internal def)144
316.8 R .477(ault port number will be used and that)-.1 F(is most lik)
144 328.8 Q(ely *not* the one you w)-.1 E(ould lik)-.1 E 2.5(ei)-.1 G
2.5(tt)-2.5 G 2.5(ob)-2.5 G(e.)-2.5 E .762(There are tw)144 352.8 R
3.262(os)-.1 G .762(pecial en)-3.262 F .762(vironment v)-.4 F .762
(ariables. 'all_proxy' is what sets proxy for an)-.25 F 3.262(yU)-.15 G
.762(RL in case)-3.262 F .428(the protocol speci\214c v)144 364.8 R .428
(ariable w)-.25 F(asn')-.1 E 2.928(ts)-.18 G .428
(et, and 'no_proxy' de\214nes a list of hosts that should not use)-2.928
F 3.454(ap)144 376.8 S .954(roxy e)-3.454 F -.15(ve)-.25 G 3.454(nt).15
G .954(hough a v)-3.454 F .954(ariable may say so. If 'no_proxy' is a p\
lain asterisk \("*"\) it matches all)-.25 F(hosts.)144 388.8 Q 3.384 -.8
(To e)144 412.8 T 1.784(xplicitly disable libcurl').65 F 4.284(sc)-.55 G
1.785(hecking for and using the proxy en)-4.284 F 1.785(vironment v)-.4
F 1.785(ariables, set the)-.25 F
(proxy name to "" - an empty string - with)144 424.8 Q F1(CURLOPT_PR)2.5
E -.4(OX)-.4 G(Y\(3\)).4 E F0(.)A(SSL and Proxies)108 441.6 Q .934
(SSL is for secure point-to-point connections. This in)144 465.6 R -.2
(vo)-.4 G(lv).2 E .934(es strong encryption and similar things,)-.15 F
1.409(which ef)144 477.6 R(fecti)-.25 E -.15(ve)-.25 G 1.409(ly mak).15
F 1.409(es it impossible for a proxy to operate as a "man in between" w\
hich the)-.1 F(proxy')144 489.6 Q 3.485(st)-.55 G .985(ask is, as pre)
-3.485 F .984(viously discussed. Instead, the only w)-.25 F .984
(ay to ha)-.1 F 1.284 -.15(ve S)-.2 H .984(SL w).15 F .984(ork o)-.1 F
-.15(ve)-.15 G 3.484(ra).15 G 3.484(nH)-3.484 G(TTP)-3.484 E .079
(proxy is to ask the proxy to tunnel trough e)144 501.6 R -.15(ve)-.25 G
.08(rything without being able to check or \214ddle with the).15 F(traf)
144 513.6 Q(\214c.)-.25 E .849(Opening an SSL connection o)144 537.6 R
-.15(ve)-.15 G 3.349(ra).15 G 3.349(nH)-3.349 G .849
(TTP proxy is therefore a matter of asking the proxy for a)-3.349 F
1.516(straight connection to the tar)144 549.6 R 1.517
(get host on a speci\214ed port. This is made with the HTTP request)-.18
F(CONNECT)144 561.6 Q 2.5(.\()-.74 G("please mr proxy)-2.5 E 2.5(,c)-.65
G(onnect me to that remote host"\).)-2.5 E 1.402(Because of the nature \
of this operation, where the proxy has no idea what kind of data that i\
s)144 585.6 R .231
(passed in and out through this tunnel, this breaks some of the v)144
597.6 R .231(ery fe)-.15 F 2.731(wa)-.25 G(dv)-2.731 E .232
(antages that come from)-.25 F .61(using a proxy)144 609.6 R 3.11(,s)
-.65 G .61(uch as caching.)-3.11 F(Man)5.609 E 3.109(yo)-.15 G -2.19
-.18(rg a)-3.109 H .609(nizations pre).18 F -.15(ve)-.25 G .609
(nt this kind of tunneling to other desti-).15 F
(nation port numbers than 443 \(which is the def)144 621.6 Q
(ault HTTPS port number\).)-.1 E -.45(Tu)108 650.4 S
(nneling Through Proxy).45 E .56(As e)144 662.4 R .56(xplained abo)-.15
F -.15(ve)-.15 G 3.06(,t).15 G .56(unneling is required for SSL to w)
-3.06 F .561(ork and often e)-.1 F -.15(ve)-.25 G 3.061(nr).15 G .561
(estricted to the opera-)-3.061 F(tion intended for SSL; HTTPS.)144
674.4 Q(This is ho)144 698.4 Q(we)-.25 E -.15(ve)-.25 G 2.5(rn).15 G
(ot the only time proxy-tunneling might of)-2.5 E
(fer bene\214ts to you or your application.)-.25 E .69(As tunneling ope\
ns a direct connection from your application to the remote machine, it \
suddenly)144 722.4 R(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255
E(13)183.865 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .218
(also re-introduces the ability to do non-HTTP operations o)144 84 R
-.15(ve)-.15 G 2.718(ra).15 G 2.718(nH)-2.718 G .218(TTP proxy)-2.718 F
2.718(.Y)-.65 G .218(ou can in f)-3.818 F .219(act use)-.1 F
(things such as FTP upload or FTP custom commands this w)144 96 Q(ay)-.1
E(.)-.65 E(Ag)144 120 Q(ain, this is often pre)-.05 E -.15(ve)-.25 G
(nted by the administrators of proxies and is rarely allo).15 E(wed.)
-.25 E -.7(Te)144 144 S(ll libcurl to use proxy tunneling lik).7 E 2.5
(et)-.1 G(his:)-2.5 E(curl_easy_setopt\(easyhandle, CURLOPT_HTTPPR)146.5
168 Q -.4(OX)-.4 G(YTUNNEL, 1L\);).4 E .329(In f)144 192 R .329
(act, there might e)-.1 F -.15(ve)-.25 G 2.829(nb).15 G 2.829(et)-2.829
G .328(imes when you w)-2.829 F .328
(ant to do plain HTTP operations using a tunnel lik)-.1 F(e)-.1 E .867
(this, as it then enables you to operate on the remote serv)144 204 R
.868(er instead of asking the proxy to do so.)-.15 F
(libcurl will not stand in the w)144 216 Q(ay for such inno)-.1 E -.25
(va)-.15 G(ti).25 E .3 -.15(ve a)-.25 H(ctions either!).15 E
(Proxy Auto-Con\214g)108 244.8 Q .345(Netscape \214rst came up with thi\
s. It is basically a web page \(usually using a .pac e)144 268.8 R .345
(xtension\) with a)-.15 F(Ja)144 280.8 Q -.25(va)-.2 G .048
(script that when e).25 F -.15(xe)-.15 G .048(cuted by the bro).15 F
.049(wser with the requested URL as input, returns information)-.25 F
1.67(to the bro)144 292.8 R 1.67(wser on ho)-.25 F 4.17(wt)-.25 G 4.17
(oc)-4.17 G 1.67
(onnect to the URL. The returned information might be "DIRECT")-4.17 F
.448(\(which means no proxy should be used\), "PR)144 304.8 R -.4(OX)-.4
G 2.948(Yh).4 G .448(ost:port" \(to tell the bro)-2.948 F .448
(wser where the proxy)-.25 F
(for this particular URL is\) or "SOCKS host:port" \(to direct the bro)
144 316.8 Q(wser to a SOCKS proxy\).)-.25 E .553
(libcurl has no means to interpret or e)144 340.8 R -.25(va)-.25 G .553
(luate Ja).25 F -.25(va)-.2 G .553(script and thus it doesn').25 F 3.053
(ts)-.18 G .553(upport this. If you get)-3.053 F 1.006
(yourself in a position where you f)144 352.8 R 1.006(ace this nasty in)
-.1 F -.15(ve)-.4 G 1.006(ntion, the follo).15 F 1.006(wing advice ha)
-.25 F 1.306 -.15(ve b)-.2 H 1.006(een men-).15 F
(tioned and used in the past:)144 364.8 Q 3.395(-D)144 388.8 S .895
(epending on the Ja)-3.395 F -.25(va)-.2 G .895(script comple).25 F
(xity)-.15 E 3.395(,w)-.65 G .894
(rite up a script that translates it to another language)-3.395 F(and e)
144 400.8 Q -.15(xe)-.15 G(cute that.).15 E 2.5(-R)144 424.8 S
(ead the Ja)-2.5 E -.25(va)-.2 G(script code and re).25 E
(write the same logic in another language.)-.25 E 3.25(-I)144 448.8 S
.75(mplement a Ja)-3.25 F -.25(va)-.2 G .75
(script interpreter; people ha).25 F 1.05 -.15(ve s)-.2 H .75
(uccessfully used the Mozilla Ja).15 F -.25(va)-.2 G .75(script engine)
.25 F(in the past.)144 460.8 Q 2.5(-A)144 484.8 S
(sk your admins to stop this, for a static proxy setup or similar)-2.5 E
(.)-.55 E/F1 10.95/Times-Bold@0 SF -.219(Pe)72 513.6 S
(rsistence Is The W).219 E(ay to Happiness)-.712 E F0(Re-c)108 525.6 Q
(ycling the same easy handle se)-.15 E -.15(ve)-.25 G
(ral times when doing multiple requests is the w).15 E(ay to go.)-.1 E
.066(After each single)108 549.6 R/F2 10/Times-Italic@0 SF
(curl_easy_perform\(3\))2.566 E F0 .066(operation, libcurl will k)2.566
F .066(eep the connection ali)-.1 F .365 -.15(ve a)-.25 H .065
(nd open. A subse-).15 F .547(quent request using the same easy handle \
to the same host might just be able to use the already open con-)108
561.6 R(nection! This reduces netw)108 573.6 Q(ork impact a lot.)-.1 E
(Ev)108 597.6 Q .51(en if the connection is dropped, all connections in)
-.15 F -.2(vo)-.4 G .509(lving SSL to the same host ag).2 F .509
(ain, will bene\214t from)-.05 F(libcurl')108 609.6 Q 2.5(ss)-.55 G
(ession ID cache that drastically reduces re-connection time.)-2.5 E
.678(FTP connections that are k)108 633.6 R .678(ept ali)-.1 F .978 -.15
(ve s)-.25 H -2.25 -.2(av e).15 H 3.178(al)3.378 G .678
(ot of time, as the command- response round-trips are skipped,)-3.178 F
.832(and also you don')108 645.6 R 3.331(tr)-.18 G .831
(isk getting block)-3.331 F .831(ed without permission to login ag)-.1 F
.831(ain lik)-.05 F 3.331(eo)-.1 G 3.331(nm)-3.331 G(an)-3.331 E 3.331
(yF)-.15 G .831(TP serv)-3.331 F .831(ers only)-.15 F(allo)108 657.6 Q
(wing N persons to be logged in at the same time.)-.25 E
(libcurl caches DNS name resolving results, to mak)108 681.6 Q 2.5(el)
-.1 G(ookups of a pre)-2.5 E(viously look)-.25 E(ed up name a lot f)-.1
E(aster)-.1 E(.)-.55 E(Other interesting details that impro)108 705.6 Q
.3 -.15(ve p)-.15 H
(erformance for subsequent requests may also be added in the future.).15
E .341(Each easy handle will attempt to k)108 729.6 R .341
(eep the last fe)-.1 F 2.841(wc)-.25 G .341(onnections ali)-2.841 F .641
-.15(ve f)-.25 H .341(or a while in case the).15 F 2.841(ya)-.15 G .341
(re to be used)-2.841 F(libcurl 7.62.0)72 768 Q(September 23, 2018)
140.255 E(14)183.865 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F(ag)108 84 Q .898(ain. Y)
-.05 F .897(ou can set the size of this "cache" with the)-1.1 F/F1 10
/Times-Italic@0 SF(CURLOPT_MAXCONNECTS\(3\))3.397 E F0 .897(option. Def)
3.397 F .897(ault is 5.)-.1 F .863(There is v)108 96 R .863
(ery seldom an)-.15 F 3.363(yp)-.15 G .863(oint in changing this v)
-3.363 F .864
(alue, and if you think of changing this it is often just a)-.25 F
(matter of thinking ag)108 108 Q(ain.)-.05 E 2.778 -.8(To f)108 132 T
1.177(orce your upcoming request to not use an already e).8 F 1.177
(xisting connection \(it will e)-.15 F -.15(ve)-.25 G 3.677(nc).15 G
1.177(lose one \214rst if)-3.677 F .194(there happens to be one ali)108
144 R .494 -.15(ve t)-.25 H 2.694(ot).15 G .194(he same host you')-2.694
F .194(re about to operate on\), you can do that by setting)-.5 F F1
(CUR-)2.695 E(LOPT_FRESH_CONNECT\(3\))108 156 Q F0 1.709(to 1. In a sim\
ilar spirit, you can also forbid the upcoming request to be)4.209 F
("lying" around and possibly get re-used after the request by setting)
108 168 Q F1(CURLOPT_FORBID_REUSE\(3\))2.5 E F0(to 1.)2.5 E/F2 10.95
/Times-Bold@0 SF(HTTP Headers Used by libcurl)72 196.8 Q F0 .865
(When you use libcurl to do HTTP requests, it')108 208.8 R .866
(ll pass along a series of headers automatically)-.1 F 3.366(.I)-.65 G
3.366(tm)-3.366 G .866(ight be)-3.366 F 2.801(good for you to kno)108
220.8 R 5.301(wa)-.25 G 2.801(nd understand these. Y)-5.301 F 2.801
(ou can replace or remo)-1.1 F 3.1 -.15(ve t)-.15 H 2.8
(hem by using the).15 F F1(CUR-)5.3 E(LOPT_HTTPHEADER\(3\))108 232.8 Q
F0(option.)2.5 E(Host)108 261.6 Q 1.024
(This header is required by HTTP 1.1 and e)144 261.6 R -.15(ve)-.25 G
3.524(nm).15 G(an)-3.524 E 3.524(y1)-.15 G 1.025(.0 serv)-3.524 F 1.025
(ers and should be the name of the)-.15 F(serv)144 273.6 Q(er we w)-.15
E(ant to talk to. This includes the port number if an)-.1 E(ything b)
-.15 E(ut def)-.2 E(ault.)-.1 E(Accept)108 302.4 Q("*/*".)144 302.4 Q
(Expect)108 331.2 Q 1.499(When doing POST requests, libcurl sets this h\
eader to "100-continue" to ask the serv)144 331.2 R 1.499(er for an)-.15
F 1.944("OK" message before it proceeds with sending the data part of t\
he post. If the POST)144 343.2 R 1.945(ed data)-.7 F
(amount is deemed "small", libcurl will not use this header)144 355.2 Q
(.)-.55 E F2(Customizing Operations)72 384 Q F0 .254
(There is an ongoing de)108 396 R -.15(ve)-.25 G .254
(lopment today where more and more protocols are b).15 F .253
(uilt upon HTTP for transport.)-.2 F .568(This has ob)108 408 R .568(vi\
ous bene\214ts as HTTP is a tested and reliable protocol that is widely\
 deplo)-.15 F .569(yed and has e)-.1 F(xcel-)-.15 E(lent proxy-support.)
108 420 Q .585(When you use one of these protocols, and e)108 444 R -.15
(ve)-.25 G 3.084(nw).15 G .584
(hen doing other kinds of programming you may need to)-3.084 F .984
(change the traditional HTTP \(or FTP or)108 456 R 3.484(...\) manners.)
-.55 F -1.1(Yo)3.484 G 3.484(um)1.1 G .985(ay need to change w)-3.484 F
.985(ords, headers or v)-.1 F(arious)-.25 E(data.)108 468 Q
(libcurl is your friend here too.)108 492 Q(CUST)108 520.8 Q(OMREQ)-.18
E(UEST)-.1 E 1.05(If just changing the actual HTTP request k)144 532.8 R
-.15(ey)-.1 G -.1(wo).15 G 1.05(rd is what you w).1 F 1.05(ant, lik)-.1
F 3.55(ew)-.1 G 1.05(hen GET)-3.55 F 3.55(,H)-.74 G 1.05(EAD or)-3.55 F
.58(POST is not good enough for you,)144 544.8 R F1(CURLOPT_CUST)3.08 E
(OMREQ)-.18 E(UEST\(3\))-.1 E F0 .58(is there for you. It is v)3.08 F
(ery)-.15 E(simple to use:)144 556.8 Q
(curl_easy_setopt\(easyhandle, CURLOPT_CUST)146.5 580.8 Q(OMREQ)-.18 E
(UEST)-.1 E 2.5(,")-.74 G(MY)-2.5 E -.35(OW)-.3 G(NREQ).35 E(UEST"\);)
-.1 E .155(When using the custom request, you change the request k)144
604.8 R -.15(ey)-.1 G -.1(wo).15 G .155
(rd of the actual request you are per).1 F(-)-.2 E .696
(forming. Thus, by def)144 616.8 R .696(ault you mak)-.1 F 3.196(eaG)-.1
G .696(ET request b)-3.196 F .697(ut you can also mak)-.2 F 3.197(eaP)
-.1 G .697(OST operation \(as)-3.197 F
(described before\) and then replace the POST k)144 628.8 Q -.15(ey)-.1
G -.1(wo).15 G(rd if you w).1 E(ant to. Y)-.1 E(ou')-1.1 E(re the boss.)
-.5 E(Modify Headers)108 657.6 Q(HTTP-lik)144 669.6 Q 2.772(ep)-.1 G
.272(rotocols pass a series of headers to the serv)-2.772 F .272
(er when doing the request, and you')-.15 F .271(re free)-.5 F
(to pass an)144 681.6 Q 2.5(ya)-.15 G(mount of e)-2.5 E
(xtra headers that you think \214t. Adding headers is this easy:)-.15 E
(struct curl_slist *headers=NULL; /* init to NULL is important */)146.5
705.6 Q(headers = curl_slist_append\(headers, "He)146.5 729.6 Q(y-serv)
-.15 E(er)-.15 E(-he)-.2 E(y: ho)-.15 E 2.5(wa)-.25 G(re you?"\);)-2.5 E
(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(15)183.865 E 0 Cg
EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F
(headers = curl_slist_append\(headers, "X-silly-content: yes"\);)146.5
84 Q(/* pass our list of custom made headers */)146.5 108 Q
(curl_easy_setopt\(easyhandle, CURLOPT_HTTPHEADER, headers\);)146.5 120
Q(curl_easy_perform\(easyhandle\); /* transfer http */)146.5 144 Q
(curl_slist_free_all\(headers\); /* free the header list */)146.5 168 Q
.678(... and if you think some of the internally generated headers, suc\
h as Accept: or Host: don')144 192 R 3.179(tc)-.18 G(on-)-3.179 E
(tain the data you w)144 204 Q
(ant them to contain, you can replace them by simply setting them too:)
-.1 E(headers = curl_slist_append\(headers, "Accept: Agent-007"\);)146.5
228 Q(headers = curl_slist_append\(headers, "Host: munged.host.line"\);)
146.5 240 Q(Delete Headers)108 268.8 Q 1.474(If you replace an e)144
280.8 R 1.473(xisting header with one with no contents, you will pre)
-.15 F -.15(ve)-.25 G 1.473(nt the header from).15 F .533(being sent. F)
144 292.8 R .533(or instance, if you w)-.15 F .533
(ant to completely pre)-.1 F -.15(ve)-.25 G .534
(nt the "Accept:" header from being sent,).15 F
(you can disable it with code similar to this:)144 304.8 Q
(headers = curl_slist_append\(headers, "Accept:"\);)146.5 328.8 Q .66(B\
oth replacing and canceling internal headers should be done with carefu\
l consideration and you)144 352.8 R(should be a)144 364.8 Q -.1(wa)-.15
G(re that you may violate the HTTP protocol when doing so.).1 E
(Enforcing chunk)108 393.6 Q(ed transfer)-.1 E(-encoding)-.2 E 1.407
(By making sure a request uses the custom header "T)144 417.6 R(ransfer)
-.35 E 1.407(-Encoding: chunk)-.2 F 1.407(ed" when doing a)-.1 F .78
(non-GET HTTP operation, libcurl will switch o)144 429.6 R -.15(ve)-.15
G 3.279(rt).15 G 3.279(o")-3.279 G(chunk)-3.279 E .779(ed" upload, e)-.1
F -.15(ve)-.25 G 3.279(nt).15 G .779(hough the size of)-3.279 F .989
(the data to upload might be kno)144 441.6 R .989(wn. By def)-.25 F .989
(ault, libcurl usually switches o)-.1 F -.15(ve)-.15 G 3.49(rt).15 G
3.49(oc)-3.49 G(hunk)-3.49 E .99(ed upload)-.1 F
(automatically if the upload data size is unkno)144 453.6 Q(wn.)-.25 E
(HTTP V)108 482.4 Q(ersion)-1.11 E .1(All HTTP requests includes the v)
144 506.4 R .1(ersion number to tell the serv)-.15 F .1(er which v)-.15
F .1(ersion we support. libcurl)-.15 F .301(speaks HTTP 1.1 by def)144
518.4 R .301(ault. Some v)-.1 F .301(ery old serv)-.15 F .301(ers don')
-.15 F 2.801(tl)-.18 G(ik)-2.801 E 2.802(eg)-.1 G .302
(etting 1.1-requests and when deal-)-2.802 F .833
(ing with stubborn old things lik)144 530.4 R 3.333(et)-.1 G .832
(hat, you can tell libcurl to use 1.0 instead by doing something)-3.333
F(lik)144 542.4 Q 2.5(et)-.1 G(his:)-2.5 E(curl_easy_setopt\(easyhandle\
, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0\);)146.5 566.4 Q
(FTP Custom Commands)108 595.2 Q .122(Not all protocols are HTTP-lik)144
619.2 R .123(e, and thus the abo)-.1 F .423 -.15(ve m)-.15 H .123
(ay not help you when you w).15 F .123(ant to mak)-.1 F .123(e, for)-.1
F -.15(ex)144 631.2 S(ample, your FTP transfers to beha).15 E .3 -.15
(ve d)-.2 H(if).15 E(ferently)-.25 E(.)-.65 E .664
(Sending custom commands to an FTP serv)144 655.2 R .663
(er means that you need to send the commands e)-.15 F(xactly)-.15 E .602
(as the FTP serv)144 667.2 R .602(er e)-.15 F .602(xpects them \(RFC959\
 is a good guide here\), and you can only use commands)-.15 F 1.03
(that w)144 679.2 R 1.03(ork on the control-connection alone. All kinds\
 of commands that require data interchange)-.1 F .01
(and thus need a data-connection must be left to libcurl')144 691.2 R
2.511(so)-.55 G .011(wn judgement. Also be a)-2.761 F -.1(wa)-.15 G .011
(re that libcurl).1 F .34(will do its v)144 703.2 R .34
(ery best to change directory to the tar)-.15 F .34
(get directory before doing an)-.18 F 2.84(yt)-.15 G(ransfer)-2.84 E
2.84(,s)-.4 G 2.84(oi)-2.84 G 2.84(fy)-2.84 G(ou)-2.84 E .064(change di\
rectory \(with CWD or similar\) you might confuse libcurl and then it m\
ight not attempt to)144 715.2 R
(transfer the \214le in the correct remote directory)144 727.2 Q(.)-.65
E(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(16)183.865 E 0 Cg
EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F 2.5(Al)144 84 S(ittle e)
-2.5 E(xample that deletes a gi)-.15 E -.15(ve)-.25 G 2.5<6e8c>.15 G
(le before an operation:)-2.5 E
(headers = curl_slist_append\(headers, "DELE \214le-to-remo)146.5 108 Q
-.15(ve)-.15 G("\);).15 E
(/* pass the list of custom commands to the handle */)146.5 132 Q
(curl_easy_setopt\(easyhandle, CURLOPT_Q)146.5 144 Q(UO)-.1 E
(TE, headers\);)-.4 E
(curl_easy_perform\(easyhandle\); /* transfer ftp data! */)146.5 168 Q
(curl_slist_free_all\(headers\); /* free the header list */)146.5 192 Q
.393(If you w)144 216 R .393(ould instead w)-.1 F .392(ant this operati\
on \(or chain of operations\) to happen _after_ the data trans-)-.1 F
7.604(fer took place the option to)144 228 R/F1 10/Times-Italic@0 SF
(curl_easy_setopt\(3\))10.105 E F0 -.1(wo)10.105 G 7.605
(uld instead be called).1 F F1(CUR-)10.105 E(LOPT_POSTQ)144 240 Q(UO)-.1
E(TE\(3\))-.4 E F0(and used the e)2.5 E(xact same w)-.15 E(ay)-.1 E(.)
-.65 E .188(The custom FTP command will be issued to the serv)144 264 R
.188(er in the same order the)-.15 F 2.688(ya)-.15 G .188
(re added to the list,)-2.688 F .946
(and if a command gets an error code returned back from the serv)144 276
R(er)-.15 E 3.447(,n)-.4 G 3.447(om)-3.447 G .947(ore commands will be)
-3.447 F .912
(issued and libcurl will bail out with an error code \(CURLE_Q)144 288 R
(UO)-.1 E(TE_ERR)-.4 E .912(OR\). Note that if you)-.4 F(use)144 300 Q
F1(CURLOPT_Q)4.362 E(UO)-.1 E(TE\(3\))-.4 E F0 1.862
(to send commands before a transfer)4.362 F 4.363(,n)-.4 G 4.363(ot)
-4.363 G 1.863(ransfer will actually tak)-4.363 F(e)-.1 E
(place when a quote command has f)144 312 Q(ailed.)-.1 E .128
(If you set the)144 336 R F1(CURLOPT_HEADER\(3\))2.628 E F0 .127
(to 1, you will tell libcurl to get information about the tar)2.628 F
(get)-.18 E 1.074(\214le and output "headers" about it. The headers wil\
l be in "HTTP-style", looking lik)144 348 R 3.574(et)-.1 G(he)-3.574 E
3.574(yd)-.15 G 3.574(oi)-3.574 G(n)-3.574 E(HTTP)144 360 Q(.)-1.11 E
1.28(The option to enable headers or to run custom FTP commands may be \
useful to combine with)144 384 R F1(CURLOPT_NOBOD)144 396 Q(Y\(3\))-.4 E
F0 2.5(.I)C 2.5(ft)-2.5 G(his option is set, no actual \214le content t\
ransfer will be performed.)-2.5 E(FTP Custom CUST)108 424.8 Q(OMREQ)-.18
E(UEST)-.1 E 1.191(If you do w)144 436.8 R 1.192
(ant to list the contents of an FTP directory using your o)-.1 F 1.192
(wn de\214ned FTP command,)-.25 F F1(CURLOPT_CUST)144 448.8 Q(OMREQ)-.18
E(UEST\(3\))-.1 E F0 .2(will do just that. "NLST" is the def)2.7 F .2
(ault one for listing directo-)-.1 F(ries b)144 460.8 Q(ut you')-.2 E
(re free to pass in your idea of a good alternati)-.5 E -.15(ve)-.25 G
(.).15 E/F2 10.95/Times-Bold@0 SF(Cookies W)72 489.6 Q
(ithout Chocolate Chips)-.197 E F0 .487
(In the HTTP sense, a cookie is a name with an associated v)108 501.6 R
.488(alue. A serv)-.25 F .488(er sends the name and v)-.15 F .488
(alue to the)-.25 F .541(client, and e)108 513.6 R .541
(xpects it to get sent back on e)-.15 F -.15(ve)-.25 G .54
(ry subsequent request to the serv).15 F .54
(er that matches the particular)-.15 F 1.406(conditions set. The condit\
ions include that the domain name and path match and that the cookie ha\
sn')108 525.6 R(t)-.18 E(become too old.)108 537.6 Q .089(In real-w)108
561.6 R .089(orld cases, serv)-.1 F .089(ers send ne)-.15 F 2.589(wc)
-.25 G .089(ookies to replace e)-2.589 F .089
(xisting ones to update them. Serv)-.15 F .088(er use cookies to)-.15 F
("track" users and to k)108 573.6 Q(eep "sessions".)-.1 E .39
(Cookies are sent from serv)108 597.6 R .391
(er to clients with the header Set-Cookie: and the)-.15 F(y')-.15 E .391
(re sent from clients to serv)-.5 F(ers)-.15 E(with the Cookie: header)
108 609.6 Q(.)-.55 E 2.779 -.8(To j)108 633.6 T 1.179(ust send whate).8
F -.15(ve)-.25 G 3.679(rc).15 G 1.178(ookie you w)-3.679 F 1.178
(ant to a serv)-.1 F(er)-.15 E 3.678(,y)-.4 G 1.178(ou can use)-3.678 F
F1(CURLOPT_COOKIE\(3\))3.678 E F0 1.178(to set a cookie)3.678 F
(string lik)108 645.6 Q 2.5(et)-.1 G(his:)-2.5 E
(curl_easy_setopt\(easyhandle, CURLOPT_COOKIE, "name1=v)110.5 669.6 Q
(ar1; name2=v)-.25 E(ar2;"\);)-.25 E .27(In man)108 693.6 R 2.77(yc)-.15
G .27(ases, that is not enough. Y)-2.77 F .271(ou might w)-1.1 F .271
(ant to dynamically sa)-.1 F .571 -.15(ve w)-.2 H(hate).15 E -.15(ve)
-.25 G 2.771(rc).15 G .271(ookies the remote serv)-2.771 F(er)-.15 E
(passes to you, and mak)108 705.6 Q 2.5(es)-.1 G
(ure those cookies are then used accordingly on later requests.)-2.5 E
.41(One w)108 729.6 R .409(ay to do this, is to sa)-.1 F .709 -.15(ve a)
-.2 H .409(ll headers you recei).15 F .709 -.15(ve i)-.25 H 2.909(nap)
.15 G .409(lain \214le and when you mak)-2.909 F 2.909(ear)-.1 G .409
(equest, you tell)-2.909 F(libcurl 7.62.0)72 768 Q(September 23, 2018)
140.255 E(17)183.865 E 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .736
(libcurl to read the pre)108 84 R .736(vious headers to \214gure out wh\
ich cookies to use. Set the header \214le to read cookies)-.25 F
(from with)108 96 Q/F1 10/Times-Italic@0 SF(CURLOPT_COOKIEFILE\(3\))2.5
E F0(.)A(The)108 120 Q F1(CURLOPT_COOKIEFILE\(3\))3.203 E F0 .702(optio\
n also automatically enables the cookie parser in libcurl. Until the)
3.203 F 2.099(cookie parser is enabled, libcurl will not parse or under\
stand incoming cookies and the)108 132 R 4.6(yw)-.15 G 2.1(ill just be)
-4.6 F .025(ignored. Ho)108 144 R(we)-.25 E -.15(ve)-.25 G .825 -.4
(r, w).15 H .025(hen the parser is enabled the cookies will be understo\
od and the cookies will be k).4 F .025(ept in)-.1 F 2.029(memory and us\
ed properly in subsequent requests when the same handle is used. Man)108
156 R 4.53(yt)-.15 G 2.03(imes this is)-4.53 F 1.097
(enough, and you may not ha)108 168 R 1.396 -.15(ve t)-.2 H 3.596(os).15
G -2.25 -.2(av e)-3.596 H 1.096
(the cookies to disk at all. Note that the \214le you specify to)3.796 F
F1(CUR-)3.596 E(LOPT_COOKIEFILE\(3\))108 180 Q F0(doesn')3.761 E 3.761
(th)-.18 G -2.25 -.2(av e)-3.761 H 1.261(to e)3.961 F 1.261
(xist to enable the parser)-.15 F 3.761(,s)-.4 G 3.761(oac)-3.761 G
1.261(ommon w)-3.761 F 1.262(ay to just enable the)-.1 F
(parser and not read an)108 192 Q 2.5(yc)-.15 G
(ookies is to use the name of a \214le you kno)-2.5 E 2.5(wd)-.25 G
(oesn')-2.5 E 2.5(te)-.18 G(xist.)-2.65 E 1.298(If you w)108 216 R 1.298
(ould rather use e)-.1 F 1.297(xisting cookies that you')-.15 F 1.597
-.15(ve p)-.5 H(re).15 E 1.297(viously recei)-.25 F -.15(ve)-.25 G 3.797
(dw).15 G 1.297(ith your Netscape or Mozilla)-3.797 F(bro)108 228 Q .586
(wsers, you can mak)-.25 F 3.086(el)-.1 G .586
(ibcurl use that cookie \214le as input. The)-3.086 F F1
(CURLOPT_COOKIEFILE\(3\))3.086 E F0 .586(is used for)3.086 F(that too, \
as libcurl will automatically \214nd out what kind of \214le it is and \
act accordingly)108 240 Q(.)-.65 E 1.038(Perhaps the most adv)108 264 R
1.038(anced cookie operation libcurl of)-.25 F 1.037(fers, is sa)-.25 F
1.037(ving the entire internal cookie state back)-.2 F .838
(into a Netscape/Mozilla formatted cookie \214le. W)108 276 R 3.339(ec)
-.8 G .839(all that the cookie-jar)-3.339 F 3.339(.W)-.55 G .839
(hen you set a \214le name with)-3.339 F F1(CURLOPT_COOKIEJ)108 288 Q
(AR\(3\))-.4 E F0 4.024(,t)C 1.524
(hat \214le name will be created and all recei)-4.024 F -.15(ve)-.25 G
4.024(dc).15 G 1.524(ookies will be stored in it)-4.024 F(when)108 300 Q
F1(curl_easy_cleanup\(3\))2.628 E F0 .129(is called. This enables cooki\
es to get passed on properly between multiple han-)2.628 F
(dles without an)108 312 Q 2.5(yi)-.15 G(nformation getting lost.)-2.5 E
/F2 10.95/Times-Bold@0 SF(FTP P)72 340.8 Q(eculiarities W)-.219 E 2.738
(eN)-.712 G(eed)-2.738 E F0 .037
(FTP transfers use a second TCP/IP connection for the data transfer)108
352.8 R 2.536(.T)-.55 G .036(his is usually a f)-2.536 F .036
(act you can for)-.1 F .036(get and)-.18 F .387(ignore b)108 364.8 R
.387(ut at times this f)-.2 F .388
(act will come back to haunt you. libcurl of)-.1 F .388(fers se)-.25 F
-.15(ve)-.25 G .388(ral dif).15 F .388(ferent w)-.25 F .388
(ays to customize)-.1 F(ho)108 376.8 Q 2.5(wt)-.25 G
(he second connection is being made.)-2.5 E .167
(libcurl can either connect to the serv)108 400.8 R .166
(er a second time or tell the serv)-.15 F .166
(er to connect back to it. The \214rst option)-.15 F .766(is the def)108
412.8 R .766(ault and it is also what w)-.1 F .766
(orks best for all the people behind \214re)-.1 F -.1(wa)-.25 G .766
(lls, N).1 F -1.11(AT)-.35 G 3.267(so)1.11 G 3.267(rI)-3.267 G
(P-masquerading)-3.267 E 3.753(setups. libcurl)108 424.8 R 1.253
(then tells the serv)3.753 F 1.253(er to open up a ne)-.15 F 3.753(wp)
-.25 G 1.253(ort and w)-3.753 F 1.253
(ait for a second connection. This is by)-.1 F(def)108 436.8 Q .346
(ault attempted with EPSV \214rst, and if that doesn')-.1 F 2.847(tw)
-.18 G .347(ork it tries P)-2.947 F .347(ASV instead. \(EPSV is an e)
-.92 F .347(xtension to)-.15 F(the original FTP spec and does not e)108
448.8 Q(xist nor w)-.15 E(ork on all FTP serv)-.1 E(ers.\))-.15 E -1.1
(Yo)108 472.8 S 2.793(uc)1.1 G .293(an pre)-2.793 F -.15(ve)-.25 G .292
(nt libcurl from \214rst trying the EPSV command by setting).15 F F1
(CURLOPT_FTP_USE_EPSV\(3\))2.792 E F0(to)2.792 E(zero.)108 484.8 Q .121
(In some cases, you will prefer to ha)108 508.8 R .421 -.15(ve t)-.2 H
.122(he serv).15 F .122
(er connect back to you for the second connection. This might)-.15 F
.388(be when the serv)108 520.8 R .388(er is perhaps behind a \214re)
-.15 F -.1(wa)-.25 G .388(ll or something and only allo).1 F .387
(ws connections on a single port.)-.25 F .462
(libcurl then informs the remote serv)108 532.8 R .462
(er which IP address and port number to connect to.)-.15 F .463
(This is made with)5.463 F(the)108 544.8 Q F1(CURLOPT_FTPPORT\(3\))2.672
E F0 .171(option. If you set it to "-", libcurl will use your system')
2.672 F 2.671(s")-.55 G(def)-2.671 E .171(ault IP address".)-.1 F .235
(If you w)108 556.8 R .236(ant to use a particular IP)-.1 F 2.736(,y)
-1.11 G .236(ou can set the full IP address, a host name to resolv)
-2.736 F 2.736(et)-.15 G 2.736(oa)-2.736 G 2.736(nI)-2.736 G 2.736(Pa)
-2.736 G .236(ddress or)-2.736 F -2.15 -.25(ev e)108 568.8 T 2.5(nal).25
G(ocal netw)-2.5 E(ork interf)-.1 E
(ace name that libcurl will get the IP address from.)-.1 E .167
(When doing the "POR)108 592.8 R .167
(T" approach, libcurl will attempt to use the EPR)-.6 F 2.667(Ta)-.6 G
.167(nd the LPR)-2.667 F 2.667(Tb)-.6 G .167(efore trying POR)-2.667 F
-.74(T,)-.6 G .019(as the)108 604.8 R 2.519(yw)-.15 G .019
(ork with more protocols. Y)-2.619 F .019(ou can disable this beha)-1.1
F .02(vior by setting)-.2 F F1(CURLOPT_FTP_USE_EPRT\(3\))2.52 E F0
(to zero.)108 616.8 Q F2(MIME API r)72 645.6 Q -.164(ev)-.197 G
(isited f).164 E(or SMTP and IMAP)-.274 E F0 .654(In addition to suppor\
t HTTP multi-part form \214elds, the MIME API can be used to b)108 657.6
R .654(uild structured e-mail)-.2 F(messages and send them via SMTP or \
append such messages to IMAP directories.)108 669.6 Q 3.322(As)108 693.6
S .822(tructured e-mail message may contain se)-3.322 F -.15(ve)-.25 G
.823(ral parts: some are displayed inline by the MU).15 F .823
(A, some are)-.4 F .219(attachments. P)108 705.6 R .218
(arts can also be structured as multi-part, for e)-.15 F .218
(xample to include another e-mail message or to)-.15 F(of)108 717.6 Q
(fer se)-.25 E -.15(ve)-.25 G(ral te).15 E(xt formats alternati)-.15 E
-.15(ve)-.25 G(s. This can be nested to an).15 E 2.5(yl)-.15 G -2.15
-.25(ev e)-2.5 H(l.).25 E(libcurl 7.62.0)72 768 Q(September 23, 2018)
140.255 E(18)183.865 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F 2.221 -.8(To b)108 84 T
.621(uild such a message, you prepare the nth-le).6 F -.15(ve)-.25 G
3.122(lm).15 G .622
(ulti-part and then include it as a source to the parent)-3.122 F 1.178
(multi-part using function)108 96 R/F1 10/Times-Italic@0 SF
(curl_mime_subparts\(3\))3.677 E F0 3.677(.O)C 1.177
(nce it has been bound to its parent multi-part, a nth-)-3.677 F(le)108
108 Q -.15(ve)-.25 G 2.5(lm).15 G
(ulti-part belongs to it and should not be freed e)-2.5 E(xplicitly)-.15
E(.)-.65 E .637(E-mail messages data is not supposed to be non-ascii an\
d line length is limited: fortunately)108 132 R 3.137(,s)-.65 G .637
(ome transfer)-3.137 F 1.475(encodings are de\214ned by the standards t\
o support the transmission of such incompatible data. Function)108 144 R
F1(curl_mime_encoder\(3\))108 156 Q F0 .496(tells a part that its sourc\
e data must be encoded before being sent. It also generates)2.995 F
1.564(the corresponding header for that part.)108 168 R 1.563
(If the part data you w)6.563 F 1.563
(ant to send is already encoded in such a)-.1 F 1.922
(scheme, do not use this function \(this w)108 180 R 1.922(ould o)-.1 F
-.15(ve)-.15 G -.2(r-).15 G 1.922(encode it\), b).2 F 1.922(ut e)-.2 F
1.922(xplicitly set the corresponding part)-.15 F(header)108 192 Q(.)
-.55 E 2.982(Upon sending such a message, libcurl prepends it with the \
header list set with)108 216 R F1(CURLOPT_HTTP-)5.482 E(HEADER\(3\))108
228 Q F0 2.5(,a)C 2.5(s0)-2.5 G(th-le)-2.5 E -.15(ve)-.25 G 2.5(lm).15 G
(ime part headers.)-2.5 E .68(Here is an e)108 252 R .68(xample b)-.15 F
.681(uilding an e-mail message with an inline plain/html te)-.2 F .681
(xt alternati)-.15 F .981 -.15(ve a)-.25 H .681(nd a \214le attach-).15
F(ment encoded in base64:)108 264 Q
(curl_mime *message = curl_mime_init\(easyhandle\);)110.5 288 Q
(/* The inline part is an alternati)110.5 312 Q .3 -.15(ve p)-.25 H
(roposing the html and the te).15 E(xt)-.15 E -.15(ve)118 324 S
(rsions of the e-mail. */).15 E
(curl_mime *alt = curl_mime_init\(easyhandle\);)110.5 336 Q
(/* HTML message. */)110.5 360 Q
(curl_mimepart *part = curl_mime_addpart\(alt\);)110.5 372 Q
(curl_mime_data\(part, "<html><body><p>This is HTML</p></body></html>",)
110.5 384 Q(CURL_ZER)163 396 Q(O_TERMIN)-.4 E -1.11(AT)-.35 G(ED\);)1.11
E(curl_mime_type\(part, "te)110.5 408 Q(xt/html"\);)-.15 E(/* T)110.5
432 Q -.15(ex)-.7 G 2.5(tm).15 G(essage. */)-2.5 E
(part = curl_mime_addpart\(alt\);)110.5 444 Q
(curl_mime_data\(part, "This is plain te)110.5 456 Q(xt message",)-.15 E
(CURL_ZER)163 468 Q(O_TERMIN)-.4 E -1.11(AT)-.35 G(ED\);)1.11 E
(/* Create the inline part. */)110.5 492 Q
(part = curl_mime_addpart\(message\);)110.5 504 Q
(curl_mime_subparts\(part, alt\);)110.5 516 Q
(curl_mime_type\(part, "multipart/alternati)110.5 528 Q -.15(ve)-.25 G
("\);).15 E(struct curl_slist *headers = curl_slist_append\(NULL,)110.5
540 Q("Content-Disposition: inline"\);)155.5 552 Q
(curl_mime_headers\(part, headers, TR)110.5 564 Q(UE\);)-.4 E
(/* Add the attachment. */)110.5 588 Q
(part = curl_mime_addpart\(message\);)110.5 600 Q
(curl_mime_\214ledata\(part, "manual.pdf"\);)110.5 612 Q
(curl_mime_encoder\(part, "base64"\);)110.5 624 Q
(/* Build the mail headers. */)110.5 648 Q
(headers = curl_slist_append\(NULL, "From: me@e)110.5 660 Q
(xample.com"\);)-.15 E(headers = curl_slist_append\(headers, "T)110.5
672 Q(o: you@e)-.8 E(xample.com"\);)-.15 E
(/* Set these into the easy handle. */)110.5 696 Q
(curl_easy_setopt\(easyhandle, CURLOPT_HTTPHEADER, headers\);)110.5 708
Q(curl_easy_setopt\(easyhandle, CURLOPT_MIMEPOST)110.5 720 Q 2.5(,m)-.74
G(ime\);)-2.5 E(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(19)
183.865 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .623(It should be noted\
 that appending a message to an IMAP directory requires the message siz\
e to be kno)108 84 R(wn)-.25 E
(prior upload. It is therefore not possible to include parts with unkno)
108 96 Q(wn data size in this conte)-.25 E(xt.)-.15 E/F1 10.95
/Times-Bold@0 SF(Headers Equal Fun)72 124.8 Q F0 .34(Some protocols pro)
108 136.8 R .34(vide "headers", meta-data separated from the normal dat\
a. These headers are by def)-.15 F(ault)-.1 E .534
(not included in the normal data stream, b)108 148.8 R .534
(ut you can mak)-.2 F 3.034(et)-.1 G .533
(hem appear in the data stream by setting)-3.034 F/F2 10/Times-Italic@0
SF(CUR-)3.033 E(LOPT_HEADER\(3\))108 160.8 Q F0(to 1.)2.5 E .135
(What might be e)108 184.8 R -.15(ve)-.25 G 2.635(nm).15 G .135
(ore useful, is libcurl')-2.635 F 2.635(sa)-.55 G .135
(bility to separate the headers from the data and thus mak)-2.635 F
2.636(et)-.1 G(he)-2.636 E .168(callbacks dif)108 196.8 R(fer)-.25 E
2.668(.Y)-.55 G .168(ou can for e)-3.768 F .167(xample set a dif)-.15 F
.167(ferent pointer to pass to the ordinary write callback by setting)
-.25 F F2(CURLOPT_HEADERD)108 208.8 Q -.37(AT)-.35 G(A\(3\))-.13 E F0(.)
A(Or)108 232.8 Q 2.983(,y)-.4 G .483
(ou can set an entirely separate function to recei)-2.983 F .784 -.15
(ve t)-.25 H .484(he headers, by using).15 F F2(CURLOPT_HEADERFUNC-)
2.984 E(TION\(3\))108 244.8 Q F0(.)A .865(The headers are passed to the\
 callback function one by one, and you can depend on that f)108 268.8 R
.865(act. It mak)-.1 F .865(es it)-.1 F
(easier for you to add custom header parsers etc.)108 280.8 Q 1.052
("Headers" for FTP transfers equal all the FTP serv)108 304.8 R 1.053
(er responses. The)-.15 F 3.553(ya)-.15 G(ren')-3.553 E 3.553(ta)-.18 G
1.053(ctually true headers, b)-3.553 F 1.053(ut in)-.2 F
(this case we pretend the)108 316.8 Q 2.5(ya)-.15 G(re! ;-\))-2.5 E F1
-.219(Po)72 345.6 S(st T).219 E(ransfer Inf)-.81 E(ormation)-.274 E F0
(See)108 357.6 Q F2(curl_easy_g)2.5 E(etinfo\(3\))-.1 E F0(.)A F1
(The multi Interface)72 374.4 Q F0 .004(The easy interf)108 386.4 R .004
(ace as described in detail in this document is a synchronous interf)-.1
F .004(ace that transfers one \214le at)-.1 F 2.5(at)108 398.4 S
(ime and doesn')-2.5 E 2.5(tr)-.18 G(eturn until it is done.)-2.5 E .712
(The multi interf)108 422.4 R .713(ace, on the other hand, allo)-.1 F
.713(ws your program to transfer multiple \214les in both directions at)
-.25 F .812(the same time, without forcing you to use multiple threads.)
108 434.4 R .812(The name might mak)5.812 F 3.312(ei)-.1 G 3.312(ts)
-3.312 G .812(eem that the multi)-3.312 F(interf)108 446.4 Q .942
(ace is for multi-threaded programs, b)-.1 F .942
(ut the truth is almost the re)-.2 F -.15(ve)-.25 G 3.442(rse. The).15 F
.942(multi interf)3.442 F .942(ace allo)-.1 F .942(ws a)-.25 F 2.554(si\
ngle-threaded application to perform the same kinds of multiple, simult\
aneous transfers that multi-)108 458.4 R .036
(threaded programs can perform.)108 470.4 R .036(It allo)5.036 F .036
(ws man)-.25 F 2.536(yo)-.15 G 2.536(ft)-2.536 G .036
(he bene\214ts of multi-threaded transfers without the com-)-2.536 F
(ple)108 482.4 Q(xity of managing and synchronizing man)-.15 E 2.5(yt)
-.15 G(hreads.)-2.5 E 2.077 -.8(To c)108 506.4 T .477
(omplicate matters some).8 F .477(what more, there are e)-.25 F -.15(ve)
-.25 G 2.977(nt).15 G .677 -.1(wo v)-2.977 H .477
(ersions of the multi interf)-.05 F .477(ace. The e)-.1 F -.15(ve)-.25 G
.476(nt based).15 F .34(one, also called multi_sock)108 518.4 R .34(et \
and the "normal one" designed for using with select\(\). See the libcur\
l-multi.3)-.1 F .609(man page for details on the multi_sock)108 530.4 R
.609(et e)-.1 F -.15(ve)-.25 G .609
(nt based API, this description here is for the select\(\) oriented).15
F(one.)108 542.4 Q 2.307 -.8(To u)108 566.4 T .707(se this interf).8 F
.707(ace, you are better of)-.1 F 3.207(fi)-.25 G 3.207(fy)-3.207 G .708
(ou \214rst understand the basics of ho)-3.207 F 3.208(wt)-.25 G 3.208
(ou)-3.208 G .708(se the easy interf)-3.208 F(ace.)-.1 E .255
(The multi interf)108 578.4 R .255(ace is simply a w)-.1 F .255
(ay to mak)-.1 F 2.755(em)-.1 G .255
(ultiple transfers at the same time by adding up multiple easy)-2.755 F
(handles into a "multi stack".)108 590.4 Q -1.1(Yo)108 614.4 S 2.802(uc)
1.1 G .302(reate the easy handles you w)-2.802 F .302
(ant, one for each concurrent transfer)-.1 F 2.802(,a)-.4 G .302
(nd you set all the options just lik)-2.802 F(e)-.1 E .663
(you learned abo)108 626.4 R -.15(ve)-.15 G 3.163(,a).15 G .662
(nd then you create a multi handle with)-3.163 F F2
(curl_multi_init\(3\))3.162 E F0 .662(and add all those easy han-)3.162
F(dles to that multi handle with)108 638.4 Q F2
(curl_multi_add_handle\(3\))2.5 E F0(.)A .021(When you')108 662.4 R .321
-.15(ve a)-.5 H .021(dded the handles you ha).15 F .321 -.15(ve f)-.2 H
.021(or the moment \(you can still add ne).15 F 2.521(wo)-.25 G .021
(nes at an)-2.521 F 2.521(yt)-.15 G .021(ime\), you start)-2.521 F
(the transfers by calling)108 674.4 Q F2(curl_multi_perform\(3\))2.5 E
F0(.)A F2(curl_multi_perform\(3\))108 698.4 Q F0 .969
(is asynchronous. It will only perform what can be done no)3.47 F 3.469
(wa)-.25 G .969(nd then return back)-3.469 F .294
(control to your program. It is designed to ne)108 710.4 R -.15(ve)-.25
G 2.795(rb).15 G .295(lock. Y)-2.795 F .295(ou need to k)-1.1 F .295
(eep calling the function until all trans-)-.1 F(fers are completed.)108
722.4 Q(libcurl 7.62.0)72 768 Q(September 23, 2018)140.255 E(20)183.865
E 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 119.985(libcurl-tutorial\(3\) libcurl)72 48 R
119.985(programming libcurl-tutorial\(3\))2.5 F .293
(The best usage of this interf)108 84 R .292(ace is when you do a selec\
t\(\) on all possible \214le descriptors or sock)-.1 F .292(ets to kno)
-.1 F(w)-.25 E .015(when to call libcurl ag)108 96 R .015
(ain. This also mak)-.05 F .016(es it easy for you to w)-.1 F .016
(ait and respond to actions on your o)-.1 F .016(wn appli-)-.25 F
(cation')108 108 Q 3.154(ss)-.55 G(ock)-3.154 E .654(ets/handles. Y)-.1
F .653(ou \214gure out what to select\(\) for by using)-1.1 F/F1 10
/Times-Italic@0 SF(curl_multi_fdset\(3\))3.153 E F0 3.153(,t)C .653
(hat \214lls in a set)-3.153 F(of fd_set v)108 120 Q(ariables for you w\
ith the particular \214le descriptors libcurl uses for the moment.)-.25
E 2.049(When you then call select\(\), it')108 144 R 2.05(ll return whe\
n one of the \214le handles signal action and you then call)-.1 F F1
(curl_multi_perform\(3\))108 156 Q F0 1.011(to allo)3.511 F 3.511(wl)
-.25 G 1.011(ibcurl to do what it w)-3.511 F 1.011(ants to do. T)-.1 F
(ak)-.8 E 3.51(en)-.1 G 1.01(ote that libcurl does also feature)-3.51 F
2.784(some time-out code so we advise you to ne)108 168 R -.15(ve)-.25 G
5.285(ru).15 G 2.785(se v)-5.285 F 2.785
(ery long timeouts on select\(\) before you call)-.15 F F1
(curl_multi_perform\(3\))108 180 Q F0(ag)2.5 E(ain.)-.05 E F1
(curl_multi_timeout\(3\))2.5 E F0(is pro)2.5 E
(vided to help you get a suitable timeout period.)-.15 E 1.532
(Another precaution you should use: al)108 204 R -.1(wa)-.1 G 1.532
(ys call).1 F F1(curl_multi_fdset\(3\))4.032 E F0 1.531
(immediately before the select\(\) call)4.032 F
(since the current set of \214le descriptors may change in an)108 216 Q
2.5(yc)-.15 G(url function in)-2.5 E -.2(vo)-.4 G -.1(ke).2 G(.).1 E
.022(If you w)108 240 R .023(ant to stop the transfer of one of the eas\
y handles in the stack, you can use)-.1 F F1(curl_multi_r)2.523 E(emo)
-.37 E(ve_han-)-.1 E(dle\(3\))108 252 Q F0(to remo)2.5 E .3 -.15(ve i)
-.15 H(ndi).15 E
(vidual easy handles. Remember that easy handles should be)-.25 E F1
(curl_easy_cleanup\(3\))2.5 E F0(ed.)A 2.212(When a transfer within the\
 multi stack has \214nished, the counter of running transfers \(as \214\
lled in by)108 276 R F1(curl_multi_perform\(3\))108 288 Q F0 2.5(\)w)C
(ill decrease. When the number reaches zero, all transfers are done.)
-2.5 E F1(curl_multi_info_r)108 312 Q(ead\(3\))-.37 E F0 2.281(can be u\
sed to get information about completed transfers. It then returns the)
4.78 F(CURLcode for each easy transfer)108 324 Q 2.5(,t)-.4 G 2.5(oa)
-2.5 G(llo)-2.5 E 2.5(wy)-.25 G(ou to \214gure out success on each indi)
-2.5 E(vidual transfer)-.25 E(.)-.55 E/F2 10.95/Times-Bold@0 SF
(SSL, Certi\214cates and Other T)72 352.8 Q(ricks)-.81 E F0 2.5([s)110.5
364.8 S(eeding, passw)-2.5 E(ords, k)-.1 E -.15(ey)-.1 G
(s, certi\214cates, ENGINE, ca certs ]).15 E F2
(Sharing Data Between Easy Handles)72 393.6 Q F0 -1.1(Yo)108 405.6 S
3.749(uc)1.1 G 1.249
(an share some data between easy handles when the easy interf)-3.749 F
1.249(ace is used, and some data is share)-.1 F
(automatically when you use the multi interf)108 417.6 Q(ace.)-.1 E .431
(When you add easy handles to a multi handle, these easy handles will a\
utomatically share a lot of the data)108 441.6 R(that otherwise w)108
453.6 Q(ould be k)-.1 E(ept on a per)-.1 E
(-easy handle basis when the easy interf)-.2 E(ace is used.)-.1 E .116(\
The DNS cache is shared between handles within a multi handle, making s\
ubsequent name resolving f)108 477.6 R(aster)-.1 E(,)-.4 E 1.296
(and the connection pool that is k)108 489.6 R 1.296(ept to better allo)
-.1 F 3.796(wp)-.25 G 1.297
(ersistent connections and connection re-use is also)-3.796 F .6
(shared. If you')108 501.6 R .6(re using the easy interf)-.5 F .6(ace, \
you can still share these between speci\214c easy handles by using)-.1 F
(the share interf)108 513.6 Q(ace, see)-.1 E F1(libcurl-shar)2.5 E
(e\(3\))-.37 E F0(.)A .382(Some things are ne)108 537.6 R -.15(ve)-.25 G
2.882(rs).15 G .382(hared automatically)-2.882 F 2.882(,n)-.65 G .382
(ot within multi handles, lik)-2.882 F 2.883(ef)-.1 G .383(or e)-2.883 F
.383(xample cookies so the only)-.15 F -.1(wa)108 549.6 S 2.5(yt).1 G
2.5(os)-2.5 G(hare that is with the share interf)-2.5 E(ace.)-.1 E F2
-.274(Fo)72 566.4 S(otnotes).274 E F0([1])108 578.4 Q 1.757
(libcurl 7.10.3 and later ha)144 578.4 R 2.057 -.15(ve t)-.2 H 1.756
(he ability to switch o).15 F -.15(ve)-.15 G 4.256(rt).15 G 4.256(oc)
-4.256 G(hunk)-4.256 E 1.756(ed T)-.1 F(ransfer)-.35 E 1.756
(-Encoding in cases)-.2 F
(where HTTP uploads are done with data of an unkno)144 590.4 Q(wn size.)
-.25 E([2])108 607.2 Q .81(This happens on W)144 607.2 R(indo)-.4 E .81
(ws machines when libcurl is b)-.25 F .81(uilt and used as a DLL. Ho)-.2
F(we)-.25 E -.15(ve)-.25 G 1.61 -.4(r, y).15 H .81(ou can).4 F
(still do this on W)144 619.2 Q(indo)-.4 E
(ws if you link with a static library)-.25 E(.)-.65 E([3])108 636 Q .215
(The curl-con\214g tool is generated at b)144 636 R .214
(uild-time \(on Unix-lik)-.2 F 2.714(es)-.1 G .214
(ystems\) and should be installed with)-2.714 F(the 'mak)144 648 Q 2.5
(ei)-.1 G(nstall' or similar instruction that installs the library)-2.5
E 2.5(,h)-.65 G(eader \214les, man pages etc.)-2.5 E([4])108 664.8 Q
.875(This beha)144 664.8 R .875(vior w)-.2 F .875(as dif)-.1 F .875
(ferent in v)-.25 F .875
(ersions before 7.17.0, where strings had to remain v)-.15 F .876
(alid past the)-.25 F(end of the)144 676.8 Q F1(curl_easy_setopt\(3\))
2.5 E F0(call.)2.5 E F2(SEE ALSO)72 693.6 Q/F3 10/Times-Bold@0 SF
(libcurl-err)108 705.6 Q(ors)-.18 E F0(\(3\),)A F3(libcurl-multi)2.5 E
F0(\(3\),)A F3(libcurl-easy)2.5 E F0(\(3\))A(libcurl 7.62.0)72 768 Q
(September 23, 2018)140.255 E(21)183.865 E 0 Cg EP
%%Trailer
end
%%EOF
